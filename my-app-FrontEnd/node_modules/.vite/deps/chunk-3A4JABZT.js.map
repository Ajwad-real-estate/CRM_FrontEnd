{
  "version": 3,
  "sources": ["../../@mui/utils/esm/ownerDocument/ownerDocument.js", "../../@mui/utils/esm/ownerDocument/index.js", "../../@mui/utils/esm/setRef/setRef.js", "../../@mui/utils/esm/setRef/index.js", "../../@mui/utils/esm/useForkRef/useForkRef.js", "../../@mui/utils/esm/useForkRef/index.js", "../../@mui/utils/esm/getScrollbarSize/getScrollbarSize.js", "../../@mui/utils/esm/getScrollbarSize/index.js"],
  "sourcesContent": ["export default function ownerDocument(node) {\r\n  return node && node.ownerDocument || document;\r\n}", "export { default } from './ownerDocument';", "/**\r\n * TODO v5: consider making it private\r\n *\r\n * passes {value} to {ref}\r\n *\r\n * WARNING: Be sure to only call this inside a callback that is passed as a ref.\r\n * Otherwise, make sure to cleanup the previous {ref} if it changes. See\r\n * https://github.com/mui/material-ui/issues/13539\r\n *\r\n * Useful if you want to expose the ref of an inner component to the public API\r\n * while still using it inside the component.\r\n * @param ref A ref callback or ref object. If anything falsy, this is a no-op.\r\n */\r\nexport default function setRef(ref, value) {\r\n  if (typeof ref === 'function') {\r\n    ref(value);\r\n  } else if (ref) {\r\n    ref.current = value;\r\n  }\r\n}", "export { default } from './setRef';", "'use client';\r\n\r\nimport * as React from 'react';\r\nimport setRef from '../setRef';\r\nexport default function useForkRef(...refs) {\r\n  /**\r\n   * This will create a new function if the refs passed to this hook change and are all defined.\r\n   * This means react will call the old forkRef with `null` and the new forkRef\r\n   * with the ref. Cleanup naturally emerges from this behavior.\r\n   */\r\n  return React.useMemo(() => {\r\n    if (refs.every(ref => ref == null)) {\r\n      return null;\r\n    }\r\n    return instance => {\r\n      refs.forEach(ref => {\r\n        setRef(ref, instance);\r\n      });\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, refs);\r\n}", "export { default } from './useForkRef';", "// A change of the browser zoom change the scrollbar size.\r\n// Credit https://github.com/twbs/bootstrap/blob/488fd8afc535ca3a6ad4dc581f5e89217b6a36ac/js/src/util/scrollbar.js#L14-L18\r\nexport default function getScrollbarSize(doc) {\r\n  // https://developer.mozilla.org/en-US/docs/Web/API/Window/innerWidth#usage_notes\r\n  const documentWidth = doc.documentElement.clientWidth;\r\n  return Math.abs(window.innerWidth - documentWidth);\r\n}", "export { default } from './getScrollbarSize';"],
  "mappings": ";;;;;;;;;AAAe,SAAR,cAA+B,MAAM;AAC1C,SAAO,QAAQ,KAAK,iBAAiB;AACvC;AAFA;AAAA;AAAA;AAAA;;;ACAA,IAAAA,sBAAA;AAAA;AAAA;AAAA;AAAA;;;ACae,SAAR,OAAwB,KAAK,OAAO;AACzC,MAAI,OAAO,QAAQ,YAAY;AAC7B,QAAI,KAAK;AAAA,EACX,WAAW,KAAK;AACd,QAAI,UAAU;AAAA,EAChB;AACF;AAnBA;AAAA;AAAA;AAAA;;;ACAA,IAAAC,eAAA;AAAA;AAAA;AAAA;AAAA;;;ACIe,SAAR,cAA+B,MAAM;AAM1C,SAAa,cAAQ,MAAM;AACzB,QAAI,KAAK,MAAM,SAAO,OAAO,IAAI,GAAG;AAClC,aAAO;AAAA,IACT;AACA,WAAO,cAAY;AACjB,WAAK,QAAQ,SAAO;AAClB,eAAO,KAAK,QAAQ;AAAA,MACtB,CAAC;AAAA,IACH;AAAA,EAEF,GAAG,IAAI;AACT;AArBA,IAEA;AAFA;AAAA;AAAA;AAEA,YAAuB;AACvB,IAAAC;AAAA;AAAA;;;ACHA,IAAAC,mBAAA;AAAA;AAAA;AAAA;AAAA;;;ACEe,SAAR,iBAAkC,KAAK;AAE5C,QAAM,gBAAgB,IAAI,gBAAgB;AAC1C,SAAO,KAAK,IAAI,OAAO,aAAa,aAAa;AACnD;AANA;AAAA;AAAA;AAAA;;;ACAA,IAAAC,yBAAA;AAAA;AAAA;AAAA;AAAA;",
  "names": ["init_ownerDocument", "init_setRef", "init_setRef", "init_useForkRef", "init_getScrollbarSize"]
}
