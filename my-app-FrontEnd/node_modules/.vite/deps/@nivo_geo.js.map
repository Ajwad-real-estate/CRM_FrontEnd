{
  "version": 3,
  "sources": ["../../d3-geo/src/adder.js", "../../d3-geo/src/math.js", "../../d3-geo/src/noop.js", "../../d3-geo/src/stream.js", "../../d3-geo/src/area.js", "../../d3-geo/src/cartesian.js", "../../d3-geo/src/bounds.js", "../../d3-geo/src/compose.js", "../../d3-geo/src/rotation.js", "../../d3-geo/src/circle.js", "../../d3-geo/src/clip/buffer.js", "../../d3-geo/src/pointEqual.js", "../../d3-geo/src/clip/rejoin.js", "../../d3-geo/src/polygonContains.js", "../../d3-array/src/ascending.js", "../../d3-array/src/bisector.js", "../../d3-array/src/bisect.js", "../../d3-array/src/array.js", "../../d3-array/src/range.js", "../../d3-array/src/ticks.js", "../../d3-array/src/merge.js", "../../d3-geo/src/clip/index.js", "../../d3-geo/src/clip/antimeridian.js", "../../d3-geo/src/clip/circle.js", "../../d3-geo/src/clip/line.js", "../../d3-geo/src/clip/rectangle.js", "../../d3-geo/src/length.js", "../../d3-geo/src/distance.js", "../../d3-geo/src/contains.js", "../../d3-geo/src/graticule.js", "../../d3-geo/src/identity.js", "../../d3-geo/src/path/area.js", "../../d3-geo/src/path/bounds.js", "../../d3-geo/src/path/centroid.js", "../../d3-geo/src/path/context.js", "../../d3-geo/src/path/measure.js", "../../d3-geo/src/path/string.js", "../../d3-geo/src/path/index.js", "../../d3-geo/src/transform.js", "../../d3-geo/src/projection/fit.js", "../../d3-geo/src/projection/resample.js", "../../d3-geo/src/projection/index.js", "../../d3-geo/src/projection/azimuthal.js", "../../d3-geo/src/projection/azimuthalEqualArea.js", "../../d3-geo/src/projection/azimuthalEquidistant.js", "../../d3-geo/src/projection/mercator.js", "../../d3-geo/src/projection/equirectangular.js", "../../d3-geo/src/projection/equalEarth.js", "../../d3-geo/src/projection/gnomonic.js", "../../d3-geo/src/projection/naturalEarth1.js", "../../d3-geo/src/projection/orthographic.js", "../../d3-geo/src/projection/stereographic.js", "../../d3-geo/src/projection/transverseMercator.js", "../../@nivo/geo/src/hooks.js", "../../@nivo/geo/src/ChoroplethTooltip.js", "../../@nivo/geo/src/props.js", "../../@nivo/geo/src/GeoGraticule.js", "../../@nivo/geo/src/GeoMapFeature.js", "../../@nivo/geo/src/GeoMap.js", "../../@nivo/geo/src/ResponsiveGeoMap.js", "../../@nivo/geo/src/GeoMapCanvas.js", "../../@nivo/geo/src/ResponsiveGeoMapCanvas.js", "../../@nivo/geo/src/Choropleth.js", "../../@nivo/geo/src/ResponsiveChoropleth.js", "../../@nivo/geo/src/ChoroplethCanvas.js", "../../@nivo/geo/src/ResponsiveChoroplethCanvas.js"],
  "sourcesContent": ["// Adds floating point numbers with twice the normal precision.\r\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\r\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\r\n// 305–363 (1997).\r\n// Code adapted from GeographicLib by Charles F. F. Karney,\r\n// http://geographiclib.sourceforge.net/\r\n\r\nexport default function() {\r\n  return new Adder;\r\n}\r\n\r\nfunction Adder() {\r\n  this.reset();\r\n}\r\n\r\nAdder.prototype = {\r\n  constructor: Adder,\r\n  reset: function() {\r\n    this.s = // rounded value\r\n    this.t = 0; // exact error\r\n  },\r\n  add: function(y) {\r\n    add(temp, y, this.t);\r\n    add(this, temp.s, this.s);\r\n    if (this.s) this.t += temp.t;\r\n    else this.s = temp.t;\r\n  },\r\n  valueOf: function() {\r\n    return this.s;\r\n  }\r\n};\r\n\r\nvar temp = new Adder;\r\n\r\nfunction add(adder, a, b) {\r\n  var x = adder.s = a + b,\r\n      bv = x - a,\r\n      av = x - bv;\r\n  adder.t = (a - av) + (b - bv);\r\n}\r\n", "export var epsilon = 1e-6;\r\nexport var epsilon2 = 1e-12;\r\nexport var pi = Math.PI;\r\nexport var halfPi = pi / 2;\r\nexport var quarterPi = pi / 4;\r\nexport var tau = pi * 2;\r\n\r\nexport var degrees = 180 / pi;\r\nexport var radians = pi / 180;\r\n\r\nexport var abs = Math.abs;\r\nexport var atan = Math.atan;\r\nexport var atan2 = Math.atan2;\r\nexport var cos = Math.cos;\r\nexport var ceil = Math.ceil;\r\nexport var exp = Math.exp;\r\nexport var floor = Math.floor;\r\nexport var log = Math.log;\r\nexport var pow = Math.pow;\r\nexport var sin = Math.sin;\r\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\r\nexport var sqrt = Math.sqrt;\r\nexport var tan = Math.tan;\r\n\r\nexport function acos(x) {\r\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\r\n}\r\n\r\nexport function asin(x) {\r\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\r\n}\r\n\r\nexport function haversin(x) {\r\n  return (x = sin(x / 2)) * x;\r\n}\r\n", "export default function noop() {}\r\n", "function streamGeometry(geometry, stream) {\r\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\r\n    streamGeometryType[geometry.type](geometry, stream);\r\n  }\r\n}\r\n\r\nvar streamObjectType = {\r\n  Feature: function(object, stream) {\r\n    streamGeometry(object.geometry, stream);\r\n  },\r\n  FeatureCollection: function(object, stream) {\r\n    var features = object.features, i = -1, n = features.length;\r\n    while (++i < n) streamGeometry(features[i].geometry, stream);\r\n  }\r\n};\r\n\r\nvar streamGeometryType = {\r\n  Sphere: function(object, stream) {\r\n    stream.sphere();\r\n  },\r\n  Point: function(object, stream) {\r\n    object = object.coordinates;\r\n    stream.point(object[0], object[1], object[2]);\r\n  },\r\n  MultiPoint: function(object, stream) {\r\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\r\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\r\n  },\r\n  LineString: function(object, stream) {\r\n    streamLine(object.coordinates, stream, 0);\r\n  },\r\n  MultiLineString: function(object, stream) {\r\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\r\n    while (++i < n) streamLine(coordinates[i], stream, 0);\r\n  },\r\n  Polygon: function(object, stream) {\r\n    streamPolygon(object.coordinates, stream);\r\n  },\r\n  MultiPolygon: function(object, stream) {\r\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\r\n    while (++i < n) streamPolygon(coordinates[i], stream);\r\n  },\r\n  GeometryCollection: function(object, stream) {\r\n    var geometries = object.geometries, i = -1, n = geometries.length;\r\n    while (++i < n) streamGeometry(geometries[i], stream);\r\n  }\r\n};\r\n\r\nfunction streamLine(coordinates, stream, closed) {\r\n  var i = -1, n = coordinates.length - closed, coordinate;\r\n  stream.lineStart();\r\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\r\n  stream.lineEnd();\r\n}\r\n\r\nfunction streamPolygon(coordinates, stream) {\r\n  var i = -1, n = coordinates.length;\r\n  stream.polygonStart();\r\n  while (++i < n) streamLine(coordinates[i], stream, 1);\r\n  stream.polygonEnd();\r\n}\r\n\r\nexport default function(object, stream) {\r\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\r\n    streamObjectType[object.type](object, stream);\r\n  } else {\r\n    streamGeometry(object, stream);\r\n  }\r\n}\r\n", "import adder from \"./adder.js\";\r\nimport {atan2, cos, quarterPi, radians, sin, tau} from \"./math.js\";\r\nimport noop from \"./noop.js\";\r\nimport stream from \"./stream.js\";\r\n\r\nexport var areaRingSum = adder();\r\n\r\nvar areaSum = adder(),\r\n    lambda00,\r\n    phi00,\r\n    lambda0,\r\n    cosPhi0,\r\n    sinPhi0;\r\n\r\nexport var areaStream = {\r\n  point: noop,\r\n  lineStart: noop,\r\n  lineEnd: noop,\r\n  polygonStart: function() {\r\n    areaRingSum.reset();\r\n    areaStream.lineStart = areaRingStart;\r\n    areaStream.lineEnd = areaRingEnd;\r\n  },\r\n  polygonEnd: function() {\r\n    var areaRing = +areaRingSum;\r\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\r\n    this.lineStart = this.lineEnd = this.point = noop;\r\n  },\r\n  sphere: function() {\r\n    areaSum.add(tau);\r\n  }\r\n};\r\n\r\nfunction areaRingStart() {\r\n  areaStream.point = areaPointFirst;\r\n}\r\n\r\nfunction areaRingEnd() {\r\n  areaPoint(lambda00, phi00);\r\n}\r\n\r\nfunction areaPointFirst(lambda, phi) {\r\n  areaStream.point = areaPoint;\r\n  lambda00 = lambda, phi00 = phi;\r\n  lambda *= radians, phi *= radians;\r\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\r\n}\r\n\r\nfunction areaPoint(lambda, phi) {\r\n  lambda *= radians, phi *= radians;\r\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\r\n\r\n  // Spherical excess E for a spherical triangle with vertices: south pole,\r\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\r\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\r\n  var dLambda = lambda - lambda0,\r\n      sdLambda = dLambda >= 0 ? 1 : -1,\r\n      adLambda = sdLambda * dLambda,\r\n      cosPhi = cos(phi),\r\n      sinPhi = sin(phi),\r\n      k = sinPhi0 * sinPhi,\r\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\r\n      v = k * sdLambda * sin(adLambda);\r\n  areaRingSum.add(atan2(v, u));\r\n\r\n  // Advance the previous points.\r\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\r\n}\r\n\r\nexport default function(object) {\r\n  areaSum.reset();\r\n  stream(object, areaStream);\r\n  return areaSum * 2;\r\n}\r\n", "import {asin, atan2, cos, sin, sqrt} from \"./math.js\";\r\n\r\nexport function spherical(cartesian) {\r\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\r\n}\r\n\r\nexport function cartesian(spherical) {\r\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\r\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\r\n}\r\n\r\nexport function cartesianDot(a, b) {\r\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\r\n}\r\n\r\nexport function cartesianCross(a, b) {\r\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\r\n}\r\n\r\n// TODO return a\r\nexport function cartesianAddInPlace(a, b) {\r\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\r\n}\r\n\r\nexport function cartesianScale(vector, k) {\r\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\r\n}\r\n\r\n// TODO return d\r\nexport function cartesianNormalizeInPlace(d) {\r\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\r\n  d[0] /= l, d[1] /= l, d[2] /= l;\r\n}\r\n", "import adder from \"./adder.js\";\r\nimport {areaStream, areaRingSum} from \"./area.js\";\r\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace, spherical} from \"./cartesian.js\";\r\nimport {abs, degrees, epsilon, radians} from \"./math.js\";\r\nimport stream from \"./stream.js\";\r\n\r\nvar lambda0, phi0, lambda1, phi1, // bounds\r\n    lambda2, // previous lambda-coordinate\r\n    lambda00, phi00, // first point\r\n    p0, // previous 3D point\r\n    deltaSum = adder(),\r\n    ranges,\r\n    range;\r\n\r\nvar boundsStream = {\r\n  point: boundsPoint,\r\n  lineStart: boundsLineStart,\r\n  lineEnd: boundsLineEnd,\r\n  polygonStart: function() {\r\n    boundsStream.point = boundsRingPoint;\r\n    boundsStream.lineStart = boundsRingStart;\r\n    boundsStream.lineEnd = boundsRingEnd;\r\n    deltaSum.reset();\r\n    areaStream.polygonStart();\r\n  },\r\n  polygonEnd: function() {\r\n    areaStream.polygonEnd();\r\n    boundsStream.point = boundsPoint;\r\n    boundsStream.lineStart = boundsLineStart;\r\n    boundsStream.lineEnd = boundsLineEnd;\r\n    if (areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\r\n    else if (deltaSum > epsilon) phi1 = 90;\r\n    else if (deltaSum < -epsilon) phi0 = -90;\r\n    range[0] = lambda0, range[1] = lambda1;\r\n  },\r\n  sphere: function() {\r\n    lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\r\n  }\r\n};\r\n\r\nfunction boundsPoint(lambda, phi) {\r\n  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\r\n  if (phi < phi0) phi0 = phi;\r\n  if (phi > phi1) phi1 = phi;\r\n}\r\n\r\nfunction linePoint(lambda, phi) {\r\n  var p = cartesian([lambda * radians, phi * radians]);\r\n  if (p0) {\r\n    var normal = cartesianCross(p0, p),\r\n        equatorial = [normal[1], -normal[0], 0],\r\n        inflection = cartesianCross(equatorial, normal);\r\n    cartesianNormalizeInPlace(inflection);\r\n    inflection = spherical(inflection);\r\n    var delta = lambda - lambda2,\r\n        sign = delta > 0 ? 1 : -1,\r\n        lambdai = inflection[0] * degrees * sign,\r\n        phii,\r\n        antimeridian = abs(delta) > 180;\r\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\r\n      phii = inflection[1] * degrees;\r\n      if (phii > phi1) phi1 = phii;\r\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\r\n      phii = -inflection[1] * degrees;\r\n      if (phii < phi0) phi0 = phii;\r\n    } else {\r\n      if (phi < phi0) phi0 = phi;\r\n      if (phi > phi1) phi1 = phi;\r\n    }\r\n    if (antimeridian) {\r\n      if (lambda < lambda2) {\r\n        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\r\n      } else {\r\n        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\r\n      }\r\n    } else {\r\n      if (lambda1 >= lambda0) {\r\n        if (lambda < lambda0) lambda0 = lambda;\r\n        if (lambda > lambda1) lambda1 = lambda;\r\n      } else {\r\n        if (lambda > lambda2) {\r\n          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\r\n        } else {\r\n          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\r\n        }\r\n      }\r\n    }\r\n  } else {\r\n    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\r\n  }\r\n  if (phi < phi0) phi0 = phi;\r\n  if (phi > phi1) phi1 = phi;\r\n  p0 = p, lambda2 = lambda;\r\n}\r\n\r\nfunction boundsLineStart() {\r\n  boundsStream.point = linePoint;\r\n}\r\n\r\nfunction boundsLineEnd() {\r\n  range[0] = lambda0, range[1] = lambda1;\r\n  boundsStream.point = boundsPoint;\r\n  p0 = null;\r\n}\r\n\r\nfunction boundsRingPoint(lambda, phi) {\r\n  if (p0) {\r\n    var delta = lambda - lambda2;\r\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\r\n  } else {\r\n    lambda00 = lambda, phi00 = phi;\r\n  }\r\n  areaStream.point(lambda, phi);\r\n  linePoint(lambda, phi);\r\n}\r\n\r\nfunction boundsRingStart() {\r\n  areaStream.lineStart();\r\n}\r\n\r\nfunction boundsRingEnd() {\r\n  boundsRingPoint(lambda00, phi00);\r\n  areaStream.lineEnd();\r\n  if (abs(deltaSum) > epsilon) lambda0 = -(lambda1 = 180);\r\n  range[0] = lambda0, range[1] = lambda1;\r\n  p0 = null;\r\n}\r\n\r\n// Finds the left-right distance between two longitudes.\r\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\r\n// the distance between ±180° to be 360°.\r\nfunction angle(lambda0, lambda1) {\r\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\r\n}\r\n\r\nfunction rangeCompare(a, b) {\r\n  return a[0] - b[0];\r\n}\r\n\r\nfunction rangeContains(range, x) {\r\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\r\n}\r\n\r\nexport default function(feature) {\r\n  var i, n, a, b, merged, deltaMax, delta;\r\n\r\n  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);\r\n  ranges = [];\r\n  stream(feature, boundsStream);\r\n\r\n  // First, sort ranges by their minimum longitudes.\r\n  if (n = ranges.length) {\r\n    ranges.sort(rangeCompare);\r\n\r\n    // Then, merge any ranges that overlap.\r\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\r\n      b = ranges[i];\r\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\r\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\r\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\r\n      } else {\r\n        merged.push(a = b);\r\n      }\r\n    }\r\n\r\n    // Finally, find the largest gap between the merged ranges.\r\n    // The final bounding box will be the inverse of this gap.\r\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\r\n      b = merged[i];\r\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];\r\n    }\r\n  }\r\n\r\n  ranges = range = null;\r\n\r\n  return lambda0 === Infinity || phi0 === Infinity\r\n      ? [[NaN, NaN], [NaN, NaN]]\r\n      : [[lambda0, phi0], [lambda1, phi1]];\r\n}\r\n", "export default function(a, b) {\r\n\r\n  function compose(x, y) {\r\n    return x = a(x, y), b(x[0], x[1]);\r\n  }\r\n\r\n  if (a.invert && b.invert) compose.invert = function(x, y) {\r\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\r\n  };\r\n\r\n  return compose;\r\n}\r\n", "import compose from \"./compose.js\";\r\nimport {abs, asin, atan2, cos, degrees, pi, radians, sin, tau} from \"./math.js\";\r\n\r\nfunction rotationIdentity(lambda, phi) {\r\n  return [abs(lambda) > pi ? lambda + Math.round(-lambda / tau) * tau : lambda, phi];\r\n}\r\n\r\nrotationIdentity.invert = rotationIdentity;\r\n\r\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\r\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\r\n    : rotationLambda(deltaLambda))\r\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\r\n    : rotationIdentity);\r\n}\r\n\r\nfunction forwardRotationLambda(deltaLambda) {\r\n  return function(lambda, phi) {\r\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\r\n  };\r\n}\r\n\r\nfunction rotationLambda(deltaLambda) {\r\n  var rotation = forwardRotationLambda(deltaLambda);\r\n  rotation.invert = forwardRotationLambda(-deltaLambda);\r\n  return rotation;\r\n}\r\n\r\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\r\n  var cosDeltaPhi = cos(deltaPhi),\r\n      sinDeltaPhi = sin(deltaPhi),\r\n      cosDeltaGamma = cos(deltaGamma),\r\n      sinDeltaGamma = sin(deltaGamma);\r\n\r\n  function rotation(lambda, phi) {\r\n    var cosPhi = cos(phi),\r\n        x = cos(lambda) * cosPhi,\r\n        y = sin(lambda) * cosPhi,\r\n        z = sin(phi),\r\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\r\n    return [\r\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\r\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\r\n    ];\r\n  }\r\n\r\n  rotation.invert = function(lambda, phi) {\r\n    var cosPhi = cos(phi),\r\n        x = cos(lambda) * cosPhi,\r\n        y = sin(lambda) * cosPhi,\r\n        z = sin(phi),\r\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\r\n    return [\r\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\r\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\r\n    ];\r\n  };\r\n\r\n  return rotation;\r\n}\r\n\r\nexport default function(rotate) {\r\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\r\n\r\n  function forward(coordinates) {\r\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\r\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\r\n  }\r\n\r\n  forward.invert = function(coordinates) {\r\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\r\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\r\n  };\r\n\r\n  return forward;\r\n}\r\n", "import {cartesian, cartesianNormalizeInPlace, spherical} from \"./cartesian.js\";\r\nimport constant from \"./constant.js\";\r\nimport {acos, cos, degrees, epsilon, radians, sin, tau} from \"./math.js\";\r\nimport {rotateRadians} from \"./rotation.js\";\r\n\r\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\r\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\r\n  if (!delta) return;\r\n  var cosRadius = cos(radius),\r\n      sinRadius = sin(radius),\r\n      step = direction * delta;\r\n  if (t0 == null) {\r\n    t0 = radius + direction * tau;\r\n    t1 = radius - step / 2;\r\n  } else {\r\n    t0 = circleRadius(cosRadius, t0);\r\n    t1 = circleRadius(cosRadius, t1);\r\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\r\n  }\r\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\r\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\r\n    stream.point(point[0], point[1]);\r\n  }\r\n}\r\n\r\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\r\nfunction circleRadius(cosRadius, point) {\r\n  point = cartesian(point), point[0] -= cosRadius;\r\n  cartesianNormalizeInPlace(point);\r\n  var radius = acos(-point[1]);\r\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\r\n}\r\n\r\nexport default function() {\r\n  var center = constant([0, 0]),\r\n      radius = constant(90),\r\n      precision = constant(6),\r\n      ring,\r\n      rotate,\r\n      stream = {point: point};\r\n\r\n  function point(x, y) {\r\n    ring.push(x = rotate(x, y));\r\n    x[0] *= degrees, x[1] *= degrees;\r\n  }\r\n\r\n  function circle() {\r\n    var c = center.apply(this, arguments),\r\n        r = radius.apply(this, arguments) * radians,\r\n        p = precision.apply(this, arguments) * radians;\r\n    ring = [];\r\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\r\n    circleStream(stream, r, p, 1);\r\n    c = {type: \"Polygon\", coordinates: [ring]};\r\n    ring = rotate = null;\r\n    return c;\r\n  }\r\n\r\n  circle.center = function(_) {\r\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\r\n  };\r\n\r\n  circle.radius = function(_) {\r\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\r\n  };\r\n\r\n  circle.precision = function(_) {\r\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\r\n  };\r\n\r\n  return circle;\r\n}\r\n", "import noop from \"../noop.js\";\r\n\r\nexport default function() {\r\n  var lines = [],\r\n      line;\r\n  return {\r\n    point: function(x, y, m) {\r\n      line.push([x, y, m]);\r\n    },\r\n    lineStart: function() {\r\n      lines.push(line = []);\r\n    },\r\n    lineEnd: noop,\r\n    rejoin: function() {\r\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\r\n    },\r\n    result: function() {\r\n      var result = lines;\r\n      lines = [];\r\n      line = null;\r\n      return result;\r\n    }\r\n  };\r\n}\r\n", "import {abs, epsilon} from \"./math.js\";\r\n\r\nexport default function(a, b) {\r\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\r\n}\r\n", "import pointEqual from \"../pointEqual.js\";\r\nimport {epsilon} from \"../math.js\";\r\n\r\nfunction Intersection(point, points, other, entry) {\r\n  this.x = point;\r\n  this.z = points;\r\n  this.o = other; // another intersection\r\n  this.e = entry; // is an entry?\r\n  this.v = false; // visited\r\n  this.n = this.p = null; // next & previous\r\n}\r\n\r\n// A generalized polygon clipping algorithm: given a polygon that has been cut\r\n// into its visible line segments, and rejoins the segments by interpolating\r\n// along the clip edge.\r\nexport default function(segments, compareIntersection, startInside, interpolate, stream) {\r\n  var subject = [],\r\n      clip = [],\r\n      i,\r\n      n;\r\n\r\n  segments.forEach(function(segment) {\r\n    if ((n = segment.length - 1) <= 0) return;\r\n    var n, p0 = segment[0], p1 = segment[n], x;\r\n\r\n    if (pointEqual(p0, p1)) {\r\n      if (!p0[2] && !p1[2]) {\r\n        stream.lineStart();\r\n        for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\r\n        stream.lineEnd();\r\n        return;\r\n      }\r\n      // handle degenerate cases by moving the point\r\n      p1[0] += 2 * epsilon;\r\n    }\r\n\r\n    subject.push(x = new Intersection(p0, segment, null, true));\r\n    clip.push(x.o = new Intersection(p0, null, x, false));\r\n    subject.push(x = new Intersection(p1, segment, null, false));\r\n    clip.push(x.o = new Intersection(p1, null, x, true));\r\n  });\r\n\r\n  if (!subject.length) return;\r\n\r\n  clip.sort(compareIntersection);\r\n  link(subject);\r\n  link(clip);\r\n\r\n  for (i = 0, n = clip.length; i < n; ++i) {\r\n    clip[i].e = startInside = !startInside;\r\n  }\r\n\r\n  var start = subject[0],\r\n      points,\r\n      point;\r\n\r\n  while (1) {\r\n    // Find first unvisited intersection.\r\n    var current = start,\r\n        isSubject = true;\r\n    while (current.v) if ((current = current.n) === start) return;\r\n    points = current.z;\r\n    stream.lineStart();\r\n    do {\r\n      current.v = current.o.v = true;\r\n      if (current.e) {\r\n        if (isSubject) {\r\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\r\n        } else {\r\n          interpolate(current.x, current.n.x, 1, stream);\r\n        }\r\n        current = current.n;\r\n      } else {\r\n        if (isSubject) {\r\n          points = current.p.z;\r\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\r\n        } else {\r\n          interpolate(current.x, current.p.x, -1, stream);\r\n        }\r\n        current = current.p;\r\n      }\r\n      current = current.o;\r\n      points = current.z;\r\n      isSubject = !isSubject;\r\n    } while (!current.v);\r\n    stream.lineEnd();\r\n  }\r\n}\r\n\r\nfunction link(array) {\r\n  if (!(n = array.length)) return;\r\n  var n,\r\n      i = 0,\r\n      a = array[0],\r\n      b;\r\n  while (++i < n) {\r\n    a.n = b = array[i];\r\n    b.p = a;\r\n    a = b;\r\n  }\r\n  a.n = b = array[0];\r\n  b.p = a;\r\n}\r\n", "import adder from \"./adder.js\";\r\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace} from \"./cartesian.js\";\r\nimport {abs, asin, atan2, cos, epsilon, halfPi, pi, quarterPi, sign, sin, tau} from \"./math.js\";\r\n\r\nvar sum = adder();\r\n\r\nfunction longitude(point) {\r\n  if (abs(point[0]) <= pi)\r\n    return point[0];\r\n  else\r\n    return sign(point[0]) * ((abs(point[0]) + pi) % tau - pi);\r\n}\r\n\r\nexport default function(polygon, point) {\r\n  var lambda = longitude(point),\r\n      phi = point[1],\r\n      sinPhi = sin(phi),\r\n      normal = [sin(lambda), -cos(lambda), 0],\r\n      angle = 0,\r\n      winding = 0;\r\n\r\n  sum.reset();\r\n\r\n  if (sinPhi === 1) phi = halfPi + epsilon;\r\n  else if (sinPhi === -1) phi = -halfPi - epsilon;\r\n\r\n  for (var i = 0, n = polygon.length; i < n; ++i) {\r\n    if (!(m = (ring = polygon[i]).length)) continue;\r\n    var ring,\r\n        m,\r\n        point0 = ring[m - 1],\r\n        lambda0 = longitude(point0),\r\n        phi0 = point0[1] / 2 + quarterPi,\r\n        sinPhi0 = sin(phi0),\r\n        cosPhi0 = cos(phi0);\r\n\r\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\r\n      var point1 = ring[j],\r\n          lambda1 = longitude(point1),\r\n          phi1 = point1[1] / 2 + quarterPi,\r\n          sinPhi1 = sin(phi1),\r\n          cosPhi1 = cos(phi1),\r\n          delta = lambda1 - lambda0,\r\n          sign = delta >= 0 ? 1 : -1,\r\n          absDelta = sign * delta,\r\n          antimeridian = absDelta > pi,\r\n          k = sinPhi0 * sinPhi1;\r\n\r\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\r\n      angle += antimeridian ? delta + sign * tau : delta;\r\n\r\n      // Are the longitudes either side of the point’s meridian (lambda),\r\n      // and are the latitudes smaller than the parallel (phi)?\r\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\r\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\r\n        cartesianNormalizeInPlace(arc);\r\n        var intersection = cartesianCross(normal, arc);\r\n        cartesianNormalizeInPlace(intersection);\r\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\r\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\r\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // First, determine whether the South pole is inside or outside:\r\n  //\r\n  // It is inside if:\r\n  // * the polygon winds around it in a clockwise direction.\r\n  // * the polygon does not (cumulatively) wind around it, but has a negative\r\n  //   (counter-clockwise) area.\r\n  //\r\n  // Second, count the (signed) number of times a segment crosses a lambda\r\n  // from the point to the South pole.  If it is zero, then the point is the\r\n  // same side as the South pole.\r\n\r\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon) ^ (winding & 1);\r\n}\r\n", "export default function(a, b) {\r\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\r\n}\r\n", "import ascending from \"./ascending\";\r\n\r\nexport default function(compare) {\r\n  if (compare.length === 1) compare = ascendingComparator(compare);\r\n  return {\r\n    left: function(a, x, lo, hi) {\r\n      if (lo == null) lo = 0;\r\n      if (hi == null) hi = a.length;\r\n      while (lo < hi) {\r\n        var mid = lo + hi >>> 1;\r\n        if (compare(a[mid], x) < 0) lo = mid + 1;\r\n        else hi = mid;\r\n      }\r\n      return lo;\r\n    },\r\n    right: function(a, x, lo, hi) {\r\n      if (lo == null) lo = 0;\r\n      if (hi == null) hi = a.length;\r\n      while (lo < hi) {\r\n        var mid = lo + hi >>> 1;\r\n        if (compare(a[mid], x) > 0) hi = mid;\r\n        else lo = mid + 1;\r\n      }\r\n      return lo;\r\n    }\r\n  };\r\n}\r\n\r\nfunction ascendingComparator(f) {\r\n  return function(d, x) {\r\n    return ascending(f(d), x);\r\n  };\r\n}\r\n", "import ascending from \"./ascending\";\r\nimport bisector from \"./bisector\";\r\n\r\nvar ascendingBisect = bisector(ascending);\r\nexport var bisectRight = ascendingBisect.right;\r\nexport var bisectLeft = ascendingBisect.left;\r\nexport default bisectRight;\r\n", "var array = Array.prototype;\r\n\r\nexport var slice = array.slice;\r\nexport var map = array.map;\r\n", "export default function(start, stop, step) {\r\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\r\n\r\n  var i = -1,\r\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\r\n      range = new Array(n);\r\n\r\n  while (++i < n) {\r\n    range[i] = start + i * step;\r\n  }\r\n\r\n  return range;\r\n}\r\n", "var e10 = Math.sqrt(50),\r\n    e5 = Math.sqrt(10),\r\n    e2 = Math.sqrt(2);\r\n\r\nexport default function(start, stop, count) {\r\n  var reverse,\r\n      i = -1,\r\n      n,\r\n      ticks,\r\n      step;\r\n\r\n  stop = +stop, start = +start, count = +count;\r\n  if (start === stop && count > 0) return [start];\r\n  if (reverse = stop < start) n = start, start = stop, stop = n;\r\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\r\n\r\n  if (step > 0) {\r\n    start = Math.ceil(start / step);\r\n    stop = Math.floor(stop / step);\r\n    ticks = new Array(n = Math.ceil(stop - start + 1));\r\n    while (++i < n) ticks[i] = (start + i) * step;\r\n  } else {\r\n    start = Math.floor(start * step);\r\n    stop = Math.ceil(stop * step);\r\n    ticks = new Array(n = Math.ceil(start - stop + 1));\r\n    while (++i < n) ticks[i] = (start - i) / step;\r\n  }\r\n\r\n  if (reverse) ticks.reverse();\r\n\r\n  return ticks;\r\n}\r\n\r\nexport function tickIncrement(start, stop, count) {\r\n  var step = (stop - start) / Math.max(0, count),\r\n      power = Math.floor(Math.log(step) / Math.LN10),\r\n      error = step / Math.pow(10, power);\r\n  return power >= 0\r\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\r\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\r\n}\r\n\r\nexport function tickStep(start, stop, count) {\r\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\r\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\r\n      error = step0 / step1;\r\n  if (error >= e10) step1 *= 10;\r\n  else if (error >= e5) step1 *= 5;\r\n  else if (error >= e2) step1 *= 2;\r\n  return stop < start ? -step1 : step1;\r\n}\r\n", "export default function(arrays) {\r\n  var n = arrays.length,\r\n      m,\r\n      i = -1,\r\n      j = 0,\r\n      merged,\r\n      array;\r\n\r\n  while (++i < n) j += arrays[i].length;\r\n  merged = new Array(j);\r\n\r\n  while (--n >= 0) {\r\n    array = arrays[n];\r\n    m = array.length;\r\n    while (--m >= 0) {\r\n      merged[--j] = array[m];\r\n    }\r\n  }\r\n\r\n  return merged;\r\n}\r\n", "import clipBuffer from \"./buffer.js\";\r\nimport clipRejoin from \"./rejoin.js\";\r\nimport {epsilon, halfPi} from \"../math.js\";\r\nimport polygonContains from \"../polygonContains.js\";\r\nimport {merge} from \"d3-array\";\r\n\r\nexport default function(pointVisible, clipLine, interpolate, start) {\r\n  return function(sink) {\r\n    var line = clipLine(sink),\r\n        ringBuffer = clipBuffer(),\r\n        ringSink = clipLine(ringBuffer),\r\n        polygonStarted = false,\r\n        polygon,\r\n        segments,\r\n        ring;\r\n\r\n    var clip = {\r\n      point: point,\r\n      lineStart: lineStart,\r\n      lineEnd: lineEnd,\r\n      polygonStart: function() {\r\n        clip.point = pointRing;\r\n        clip.lineStart = ringStart;\r\n        clip.lineEnd = ringEnd;\r\n        segments = [];\r\n        polygon = [];\r\n      },\r\n      polygonEnd: function() {\r\n        clip.point = point;\r\n        clip.lineStart = lineStart;\r\n        clip.lineEnd = lineEnd;\r\n        segments = merge(segments);\r\n        var startInside = polygonContains(polygon, start);\r\n        if (segments.length) {\r\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\r\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\r\n        } else if (startInside) {\r\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\r\n          sink.lineStart();\r\n          interpolate(null, null, 1, sink);\r\n          sink.lineEnd();\r\n        }\r\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\r\n        segments = polygon = null;\r\n      },\r\n      sphere: function() {\r\n        sink.polygonStart();\r\n        sink.lineStart();\r\n        interpolate(null, null, 1, sink);\r\n        sink.lineEnd();\r\n        sink.polygonEnd();\r\n      }\r\n    };\r\n\r\n    function point(lambda, phi) {\r\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\r\n    }\r\n\r\n    function pointLine(lambda, phi) {\r\n      line.point(lambda, phi);\r\n    }\r\n\r\n    function lineStart() {\r\n      clip.point = pointLine;\r\n      line.lineStart();\r\n    }\r\n\r\n    function lineEnd() {\r\n      clip.point = point;\r\n      line.lineEnd();\r\n    }\r\n\r\n    function pointRing(lambda, phi) {\r\n      ring.push([lambda, phi]);\r\n      ringSink.point(lambda, phi);\r\n    }\r\n\r\n    function ringStart() {\r\n      ringSink.lineStart();\r\n      ring = [];\r\n    }\r\n\r\n    function ringEnd() {\r\n      pointRing(ring[0][0], ring[0][1]);\r\n      ringSink.lineEnd();\r\n\r\n      var clean = ringSink.clean(),\r\n          ringSegments = ringBuffer.result(),\r\n          i, n = ringSegments.length, m,\r\n          segment,\r\n          point;\r\n\r\n      ring.pop();\r\n      polygon.push(ring);\r\n      ring = null;\r\n\r\n      if (!n) return;\r\n\r\n      // No intersections.\r\n      if (clean & 1) {\r\n        segment = ringSegments[0];\r\n        if ((m = segment.length - 1) > 0) {\r\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\r\n          sink.lineStart();\r\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\r\n          sink.lineEnd();\r\n        }\r\n        return;\r\n      }\r\n\r\n      // Rejoin connected segments.\r\n      // TODO reuse ringBuffer.rejoin()?\r\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\r\n\r\n      segments.push(ringSegments.filter(validSegment));\r\n    }\r\n\r\n    return clip;\r\n  };\r\n}\r\n\r\nfunction validSegment(segment) {\r\n  return segment.length > 1;\r\n}\r\n\r\n// Intersections are sorted along the clip edge. For both antimeridian cutting\r\n// and circle clipping, the same comparison is used.\r\nfunction compareIntersection(a, b) {\r\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\r\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\r\n}\r\n", "import clip from \"./index.js\";\r\nimport {abs, atan, cos, epsilon, halfPi, pi, sin} from \"../math.js\";\r\n\r\nexport default clip(\r\n  function() { return true; },\r\n  clipAntimeridianLine,\r\n  clipAntimeridianInterpolate,\r\n  [-pi, -halfPi]\r\n);\r\n\r\n// Takes a line and cuts into visible segments. Return values: 0 - there were\r\n// intersections or the line was empty; 1 - no intersections; 2 - there were\r\n// intersections, and the first and last segments should be rejoined.\r\nfunction clipAntimeridianLine(stream) {\r\n  var lambda0 = NaN,\r\n      phi0 = NaN,\r\n      sign0 = NaN,\r\n      clean; // no intersections\r\n\r\n  return {\r\n    lineStart: function() {\r\n      stream.lineStart();\r\n      clean = 1;\r\n    },\r\n    point: function(lambda1, phi1) {\r\n      var sign1 = lambda1 > 0 ? pi : -pi,\r\n          delta = abs(lambda1 - lambda0);\r\n      if (abs(delta - pi) < epsilon) { // line crosses a pole\r\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\r\n        stream.point(sign0, phi0);\r\n        stream.lineEnd();\r\n        stream.lineStart();\r\n        stream.point(sign1, phi0);\r\n        stream.point(lambda1, phi0);\r\n        clean = 0;\r\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\r\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\r\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\r\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\r\n        stream.point(sign0, phi0);\r\n        stream.lineEnd();\r\n        stream.lineStart();\r\n        stream.point(sign1, phi0);\r\n        clean = 0;\r\n      }\r\n      stream.point(lambda0 = lambda1, phi0 = phi1);\r\n      sign0 = sign1;\r\n    },\r\n    lineEnd: function() {\r\n      stream.lineEnd();\r\n      lambda0 = phi0 = NaN;\r\n    },\r\n    clean: function() {\r\n      return 2 - clean; // if intersections, rejoin first and last segments\r\n    }\r\n  };\r\n}\r\n\r\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\r\n  var cosPhi0,\r\n      cosPhi1,\r\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\r\n  return abs(sinLambda0Lambda1) > epsilon\r\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\r\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\r\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\r\n      : (phi0 + phi1) / 2;\r\n}\r\n\r\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\r\n  var phi;\r\n  if (from == null) {\r\n    phi = direction * halfPi;\r\n    stream.point(-pi, phi);\r\n    stream.point(0, phi);\r\n    stream.point(pi, phi);\r\n    stream.point(pi, 0);\r\n    stream.point(pi, -phi);\r\n    stream.point(0, -phi);\r\n    stream.point(-pi, -phi);\r\n    stream.point(-pi, 0);\r\n    stream.point(-pi, phi);\r\n  } else if (abs(from[0] - to[0]) > epsilon) {\r\n    var lambda = from[0] < to[0] ? pi : -pi;\r\n    phi = direction * lambda / 2;\r\n    stream.point(-lambda, phi);\r\n    stream.point(0, phi);\r\n    stream.point(lambda, phi);\r\n  } else {\r\n    stream.point(to[0], to[1]);\r\n  }\r\n}\r\n", "import {cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical} from \"../cartesian.js\";\r\nimport {circleStream} from \"../circle.js\";\r\nimport {abs, cos, epsilon, pi, radians, sqrt} from \"../math.js\";\r\nimport pointEqual from \"../pointEqual.js\";\r\nimport clip from \"./index.js\";\r\n\r\nexport default function(radius) {\r\n  var cr = cos(radius),\r\n      delta = 6 * radians,\r\n      smallRadius = cr > 0,\r\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\r\n\r\n  function interpolate(from, to, direction, stream) {\r\n    circleStream(stream, radius, delta, direction, from, to);\r\n  }\r\n\r\n  function visible(lambda, phi) {\r\n    return cos(lambda) * cos(phi) > cr;\r\n  }\r\n\r\n  // Takes a line and cuts into visible segments. Return values used for polygon\r\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\r\n  // intersections 2 - there were intersections, and the first and last segments\r\n  // should be rejoined.\r\n  function clipLine(stream) {\r\n    var point0, // previous point\r\n        c0, // code for previous point\r\n        v0, // visibility of previous point\r\n        v00, // visibility of first point\r\n        clean; // no intersections\r\n    return {\r\n      lineStart: function() {\r\n        v00 = v0 = false;\r\n        clean = 1;\r\n      },\r\n      point: function(lambda, phi) {\r\n        var point1 = [lambda, phi],\r\n            point2,\r\n            v = visible(lambda, phi),\r\n            c = smallRadius\r\n              ? v ? 0 : code(lambda, phi)\r\n              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\r\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\r\n        if (v !== v0) {\r\n          point2 = intersect(point0, point1);\r\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2))\r\n            point1[2] = 1;\r\n        }\r\n        if (v !== v0) {\r\n          clean = 0;\r\n          if (v) {\r\n            // outside going in\r\n            stream.lineStart();\r\n            point2 = intersect(point1, point0);\r\n            stream.point(point2[0], point2[1]);\r\n          } else {\r\n            // inside going out\r\n            point2 = intersect(point0, point1);\r\n            stream.point(point2[0], point2[1], 2);\r\n            stream.lineEnd();\r\n          }\r\n          point0 = point2;\r\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\r\n          var t;\r\n          // If the codes for two points are different, or are both zero,\r\n          // and there this segment intersects with the small circle.\r\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\r\n            clean = 0;\r\n            if (smallRadius) {\r\n              stream.lineStart();\r\n              stream.point(t[0][0], t[0][1]);\r\n              stream.point(t[1][0], t[1][1]);\r\n              stream.lineEnd();\r\n            } else {\r\n              stream.point(t[1][0], t[1][1]);\r\n              stream.lineEnd();\r\n              stream.lineStart();\r\n              stream.point(t[0][0], t[0][1], 3);\r\n            }\r\n          }\r\n        }\r\n        if (v && (!point0 || !pointEqual(point0, point1))) {\r\n          stream.point(point1[0], point1[1]);\r\n        }\r\n        point0 = point1, v0 = v, c0 = c;\r\n      },\r\n      lineEnd: function() {\r\n        if (v0) stream.lineEnd();\r\n        point0 = null;\r\n      },\r\n      // Rejoin first and last segments if there were intersections and the first\r\n      // and last points were visible.\r\n      clean: function() {\r\n        return clean | ((v00 && v0) << 1);\r\n      }\r\n    };\r\n  }\r\n\r\n  // Intersects the great circle between a and b with the clip circle.\r\n  function intersect(a, b, two) {\r\n    var pa = cartesian(a),\r\n        pb = cartesian(b);\r\n\r\n    // We have two planes, n1.p = d1 and n2.p = d2.\r\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\r\n    var n1 = [1, 0, 0], // normal\r\n        n2 = cartesianCross(pa, pb),\r\n        n2n2 = cartesianDot(n2, n2),\r\n        n1n2 = n2[0], // cartesianDot(n1, n2),\r\n        determinant = n2n2 - n1n2 * n1n2;\r\n\r\n    // Two polar points.\r\n    if (!determinant) return !two && a;\r\n\r\n    var c1 =  cr * n2n2 / determinant,\r\n        c2 = -cr * n1n2 / determinant,\r\n        n1xn2 = cartesianCross(n1, n2),\r\n        A = cartesianScale(n1, c1),\r\n        B = cartesianScale(n2, c2);\r\n    cartesianAddInPlace(A, B);\r\n\r\n    // Solve |p(t)|^2 = 1.\r\n    var u = n1xn2,\r\n        w = cartesianDot(A, u),\r\n        uu = cartesianDot(u, u),\r\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\r\n\r\n    if (t2 < 0) return;\r\n\r\n    var t = sqrt(t2),\r\n        q = cartesianScale(u, (-w - t) / uu);\r\n    cartesianAddInPlace(q, A);\r\n    q = spherical(q);\r\n\r\n    if (!two) return q;\r\n\r\n    // Two intersection points.\r\n    var lambda0 = a[0],\r\n        lambda1 = b[0],\r\n        phi0 = a[1],\r\n        phi1 = b[1],\r\n        z;\r\n\r\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\r\n\r\n    var delta = lambda1 - lambda0,\r\n        polar = abs(delta - pi) < epsilon,\r\n        meridian = polar || delta < epsilon;\r\n\r\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\r\n\r\n    // Check that the first point is between a and b.\r\n    if (meridian\r\n        ? polar\r\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)\r\n          : phi0 <= q[1] && q[1] <= phi1\r\n        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\r\n      var q1 = cartesianScale(u, (-w + t) / uu);\r\n      cartesianAddInPlace(q1, A);\r\n      return [q, spherical(q1)];\r\n    }\r\n  }\r\n\r\n  // Generates a 4-bit vector representing the location of a point relative to\r\n  // the small circle's bounding box.\r\n  function code(lambda, phi) {\r\n    var r = smallRadius ? radius : pi - radius,\r\n        code = 0;\r\n    if (lambda < -r) code |= 1; // left\r\n    else if (lambda > r) code |= 2; // right\r\n    if (phi < -r) code |= 4; // below\r\n    else if (phi > r) code |= 8; // above\r\n    return code;\r\n  }\r\n\r\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\r\n}\r\n", "export default function(a, b, x0, y0, x1, y1) {\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      bx = b[0],\r\n      by = b[1],\r\n      t0 = 0,\r\n      t1 = 1,\r\n      dx = bx - ax,\r\n      dy = by - ay,\r\n      r;\r\n\r\n  r = x0 - ax;\r\n  if (!dx && r > 0) return;\r\n  r /= dx;\r\n  if (dx < 0) {\r\n    if (r < t0) return;\r\n    if (r < t1) t1 = r;\r\n  } else if (dx > 0) {\r\n    if (r > t1) return;\r\n    if (r > t0) t0 = r;\r\n  }\r\n\r\n  r = x1 - ax;\r\n  if (!dx && r < 0) return;\r\n  r /= dx;\r\n  if (dx < 0) {\r\n    if (r > t1) return;\r\n    if (r > t0) t0 = r;\r\n  } else if (dx > 0) {\r\n    if (r < t0) return;\r\n    if (r < t1) t1 = r;\r\n  }\r\n\r\n  r = y0 - ay;\r\n  if (!dy && r > 0) return;\r\n  r /= dy;\r\n  if (dy < 0) {\r\n    if (r < t0) return;\r\n    if (r < t1) t1 = r;\r\n  } else if (dy > 0) {\r\n    if (r > t1) return;\r\n    if (r > t0) t0 = r;\r\n  }\r\n\r\n  r = y1 - ay;\r\n  if (!dy && r < 0) return;\r\n  r /= dy;\r\n  if (dy < 0) {\r\n    if (r > t1) return;\r\n    if (r > t0) t0 = r;\r\n  } else if (dy > 0) {\r\n    if (r < t0) return;\r\n    if (r < t1) t1 = r;\r\n  }\r\n\r\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\r\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\r\n  return true;\r\n}\r\n", "import {abs, epsilon} from \"../math.js\";\r\nimport clipBuffer from \"./buffer.js\";\r\nimport clipLine from \"./line.js\";\r\nimport clipRejoin from \"./rejoin.js\";\r\nimport {merge} from \"d3-array\";\r\n\r\nvar clipMax = 1e9, clipMin = -clipMax;\r\n\r\n// TODO Use d3-polygon’s polygonContains here for the ring check?\r\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\r\n\r\nexport default function clipRectangle(x0, y0, x1, y1) {\r\n\r\n  function visible(x, y) {\r\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\r\n  }\r\n\r\n  function interpolate(from, to, direction, stream) {\r\n    var a = 0, a1 = 0;\r\n    if (from == null\r\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\r\n        || comparePoint(from, to) < 0 ^ direction > 0) {\r\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\r\n      while ((a = (a + direction + 4) % 4) !== a1);\r\n    } else {\r\n      stream.point(to[0], to[1]);\r\n    }\r\n  }\r\n\r\n  function corner(p, direction) {\r\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\r\n        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\r\n        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\r\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\r\n  }\r\n\r\n  function compareIntersection(a, b) {\r\n    return comparePoint(a.x, b.x);\r\n  }\r\n\r\n  function comparePoint(a, b) {\r\n    var ca = corner(a, 1),\r\n        cb = corner(b, 1);\r\n    return ca !== cb ? ca - cb\r\n        : ca === 0 ? b[1] - a[1]\r\n        : ca === 1 ? a[0] - b[0]\r\n        : ca === 2 ? a[1] - b[1]\r\n        : b[0] - a[0];\r\n  }\r\n\r\n  return function(stream) {\r\n    var activeStream = stream,\r\n        bufferStream = clipBuffer(),\r\n        segments,\r\n        polygon,\r\n        ring,\r\n        x__, y__, v__, // first point\r\n        x_, y_, v_, // previous point\r\n        first,\r\n        clean;\r\n\r\n    var clipStream = {\r\n      point: point,\r\n      lineStart: lineStart,\r\n      lineEnd: lineEnd,\r\n      polygonStart: polygonStart,\r\n      polygonEnd: polygonEnd\r\n    };\r\n\r\n    function point(x, y) {\r\n      if (visible(x, y)) activeStream.point(x, y);\r\n    }\r\n\r\n    function polygonInside() {\r\n      var winding = 0;\r\n\r\n      for (var i = 0, n = polygon.length; i < n; ++i) {\r\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\r\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\r\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\r\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\r\n        }\r\n      }\r\n\r\n      return winding;\r\n    }\r\n\r\n    // Buffer geometry within a polygon and then clip it en masse.\r\n    function polygonStart() {\r\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\r\n    }\r\n\r\n    function polygonEnd() {\r\n      var startInside = polygonInside(),\r\n          cleanInside = clean && startInside,\r\n          visible = (segments = merge(segments)).length;\r\n      if (cleanInside || visible) {\r\n        stream.polygonStart();\r\n        if (cleanInside) {\r\n          stream.lineStart();\r\n          interpolate(null, null, 1, stream);\r\n          stream.lineEnd();\r\n        }\r\n        if (visible) {\r\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\r\n        }\r\n        stream.polygonEnd();\r\n      }\r\n      activeStream = stream, segments = polygon = ring = null;\r\n    }\r\n\r\n    function lineStart() {\r\n      clipStream.point = linePoint;\r\n      if (polygon) polygon.push(ring = []);\r\n      first = true;\r\n      v_ = false;\r\n      x_ = y_ = NaN;\r\n    }\r\n\r\n    // TODO rather than special-case polygons, simply handle them separately.\r\n    // Ideally, coincident intersection points should be jittered to avoid\r\n    // clipping issues.\r\n    function lineEnd() {\r\n      if (segments) {\r\n        linePoint(x__, y__);\r\n        if (v__ && v_) bufferStream.rejoin();\r\n        segments.push(bufferStream.result());\r\n      }\r\n      clipStream.point = point;\r\n      if (v_) activeStream.lineEnd();\r\n    }\r\n\r\n    function linePoint(x, y) {\r\n      var v = visible(x, y);\r\n      if (polygon) ring.push([x, y]);\r\n      if (first) {\r\n        x__ = x, y__ = y, v__ = v;\r\n        first = false;\r\n        if (v) {\r\n          activeStream.lineStart();\r\n          activeStream.point(x, y);\r\n        }\r\n      } else {\r\n        if (v && v_) activeStream.point(x, y);\r\n        else {\r\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\r\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\r\n          if (clipLine(a, b, x0, y0, x1, y1)) {\r\n            if (!v_) {\r\n              activeStream.lineStart();\r\n              activeStream.point(a[0], a[1]);\r\n            }\r\n            activeStream.point(b[0], b[1]);\r\n            if (!v) activeStream.lineEnd();\r\n            clean = false;\r\n          } else if (v) {\r\n            activeStream.lineStart();\r\n            activeStream.point(x, y);\r\n            clean = false;\r\n          }\r\n        }\r\n      }\r\n      x_ = x, y_ = y, v_ = v;\r\n    }\r\n\r\n    return clipStream;\r\n  };\r\n}\r\n", "import adder from \"./adder.js\";\r\nimport {abs, atan2, cos, radians, sin, sqrt} from \"./math.js\";\r\nimport noop from \"./noop.js\";\r\nimport stream from \"./stream.js\";\r\n\r\nvar lengthSum = adder(),\r\n    lambda0,\r\n    sinPhi0,\r\n    cosPhi0;\r\n\r\nvar lengthStream = {\r\n  sphere: noop,\r\n  point: noop,\r\n  lineStart: lengthLineStart,\r\n  lineEnd: noop,\r\n  polygonStart: noop,\r\n  polygonEnd: noop\r\n};\r\n\r\nfunction lengthLineStart() {\r\n  lengthStream.point = lengthPointFirst;\r\n  lengthStream.lineEnd = lengthLineEnd;\r\n}\r\n\r\nfunction lengthLineEnd() {\r\n  lengthStream.point = lengthStream.lineEnd = noop;\r\n}\r\n\r\nfunction lengthPointFirst(lambda, phi) {\r\n  lambda *= radians, phi *= radians;\r\n  lambda0 = lambda, sinPhi0 = sin(phi), cosPhi0 = cos(phi);\r\n  lengthStream.point = lengthPoint;\r\n}\r\n\r\nfunction lengthPoint(lambda, phi) {\r\n  lambda *= radians, phi *= radians;\r\n  var sinPhi = sin(phi),\r\n      cosPhi = cos(phi),\r\n      delta = abs(lambda - lambda0),\r\n      cosDelta = cos(delta),\r\n      sinDelta = sin(delta),\r\n      x = cosPhi * sinDelta,\r\n      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,\r\n      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;\r\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\r\n  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;\r\n}\r\n\r\nexport default function(object) {\r\n  lengthSum.reset();\r\n  stream(object, lengthStream);\r\n  return +lengthSum;\r\n}\r\n", "import length from \"./length.js\";\r\n\r\nvar coordinates = [null, null],\r\n    object = {type: \"LineString\", coordinates: coordinates};\r\n\r\nexport default function(a, b) {\r\n  coordinates[0] = a;\r\n  coordinates[1] = b;\r\n  return length(object);\r\n}\r\n", "import {default as polygonContains} from \"./polygonContains.js\";\r\nimport {default as distance} from \"./distance.js\";\r\nimport {epsilon2, radians} from \"./math.js\";\r\n\r\nvar containsObjectType = {\r\n  Feature: function(object, point) {\r\n    return containsGeometry(object.geometry, point);\r\n  },\r\n  FeatureCollection: function(object, point) {\r\n    var features = object.features, i = -1, n = features.length;\r\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\r\n    return false;\r\n  }\r\n};\r\n\r\nvar containsGeometryType = {\r\n  Sphere: function() {\r\n    return true;\r\n  },\r\n  Point: function(object, point) {\r\n    return containsPoint(object.coordinates, point);\r\n  },\r\n  MultiPoint: function(object, point) {\r\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\r\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\r\n    return false;\r\n  },\r\n  LineString: function(object, point) {\r\n    return containsLine(object.coordinates, point);\r\n  },\r\n  MultiLineString: function(object, point) {\r\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\r\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\r\n    return false;\r\n  },\r\n  Polygon: function(object, point) {\r\n    return containsPolygon(object.coordinates, point);\r\n  },\r\n  MultiPolygon: function(object, point) {\r\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\r\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\r\n    return false;\r\n  },\r\n  GeometryCollection: function(object, point) {\r\n    var geometries = object.geometries, i = -1, n = geometries.length;\r\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\r\n    return false;\r\n  }\r\n};\r\n\r\nfunction containsGeometry(geometry, point) {\r\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\r\n      ? containsGeometryType[geometry.type](geometry, point)\r\n      : false;\r\n}\r\n\r\nfunction containsPoint(coordinates, point) {\r\n  return distance(coordinates, point) === 0;\r\n}\r\n\r\nfunction containsLine(coordinates, point) {\r\n  var ao, bo, ab;\r\n  for (var i = 0, n = coordinates.length; i < n; i++) {\r\n    bo = distance(coordinates[i], point);\r\n    if (bo === 0) return true;\r\n    if (i > 0) {\r\n      ab = distance(coordinates[i], coordinates[i - 1]);\r\n      if (\r\n        ab > 0 &&\r\n        ao <= ab &&\r\n        bo <= ab &&\r\n        (ao + bo - ab) * (1 - Math.pow((ao - bo) / ab, 2)) < epsilon2 * ab\r\n      )\r\n        return true;\r\n    }\r\n    ao = bo;\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction containsPolygon(coordinates, point) {\r\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\r\n}\r\n\r\nfunction ringRadians(ring) {\r\n  return ring = ring.map(pointRadians), ring.pop(), ring;\r\n}\r\n\r\nfunction pointRadians(point) {\r\n  return [point[0] * radians, point[1] * radians];\r\n}\r\n\r\nexport default function(object, point) {\r\n  return (object && containsObjectType.hasOwnProperty(object.type)\r\n      ? containsObjectType[object.type]\r\n      : containsGeometry)(object, point);\r\n}\r\n", "import {range} from \"d3-array\";\r\nimport {abs, ceil, epsilon} from \"./math.js\";\r\n\r\nfunction graticuleX(y0, y1, dy) {\r\n  var y = range(y0, y1 - epsilon, dy).concat(y1);\r\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\r\n}\r\n\r\nfunction graticuleY(x0, x1, dx) {\r\n  var x = range(x0, x1 - epsilon, dx).concat(x1);\r\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\r\n}\r\n\r\nexport default function graticule() {\r\n  var x1, x0, X1, X0,\r\n      y1, y0, Y1, Y0,\r\n      dx = 10, dy = dx, DX = 90, DY = 360,\r\n      x, y, X, Y,\r\n      precision = 2.5;\r\n\r\n  function graticule() {\r\n    return {type: \"MultiLineString\", coordinates: lines()};\r\n  }\r\n\r\n  function lines() {\r\n    return range(ceil(X0 / DX) * DX, X1, DX).map(X)\r\n        .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\r\n        .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon; }).map(x))\r\n        .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon; }).map(y));\r\n  }\r\n\r\n  graticule.lines = function() {\r\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\r\n  };\r\n\r\n  graticule.outline = function() {\r\n    return {\r\n      type: \"Polygon\",\r\n      coordinates: [\r\n        X(X0).concat(\r\n        Y(Y1).slice(1),\r\n        X(X1).reverse().slice(1),\r\n        Y(Y0).reverse().slice(1))\r\n      ]\r\n    };\r\n  };\r\n\r\n  graticule.extent = function(_) {\r\n    if (!arguments.length) return graticule.extentMinor();\r\n    return graticule.extentMajor(_).extentMinor(_);\r\n  };\r\n\r\n  graticule.extentMajor = function(_) {\r\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\r\n    X0 = +_[0][0], X1 = +_[1][0];\r\n    Y0 = +_[0][1], Y1 = +_[1][1];\r\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\r\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\r\n    return graticule.precision(precision);\r\n  };\r\n\r\n  graticule.extentMinor = function(_) {\r\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\r\n    x0 = +_[0][0], x1 = +_[1][0];\r\n    y0 = +_[0][1], y1 = +_[1][1];\r\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\r\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\r\n    return graticule.precision(precision);\r\n  };\r\n\r\n  graticule.step = function(_) {\r\n    if (!arguments.length) return graticule.stepMinor();\r\n    return graticule.stepMajor(_).stepMinor(_);\r\n  };\r\n\r\n  graticule.stepMajor = function(_) {\r\n    if (!arguments.length) return [DX, DY];\r\n    DX = +_[0], DY = +_[1];\r\n    return graticule;\r\n  };\r\n\r\n  graticule.stepMinor = function(_) {\r\n    if (!arguments.length) return [dx, dy];\r\n    dx = +_[0], dy = +_[1];\r\n    return graticule;\r\n  };\r\n\r\n  graticule.precision = function(_) {\r\n    if (!arguments.length) return precision;\r\n    precision = +_;\r\n    x = graticuleX(y0, y1, 90);\r\n    y = graticuleY(x0, x1, precision);\r\n    X = graticuleX(Y0, Y1, 90);\r\n    Y = graticuleY(X0, X1, precision);\r\n    return graticule;\r\n  };\r\n\r\n  return graticule\r\n      .extentMajor([[-180, -90 + epsilon], [180, 90 - epsilon]])\r\n      .extentMinor([[-180, -80 - epsilon], [180, 80 + epsilon]]);\r\n}\r\n\r\nexport function graticule10() {\r\n  return graticule()();\r\n}\r\n", "export default function(x) {\r\n  return x;\r\n}\r\n", "import adder from \"../adder.js\";\r\nimport {abs} from \"../math.js\";\r\nimport noop from \"../noop.js\";\r\n\r\nvar areaSum = adder(),\r\n    areaRingSum = adder(),\r\n    x00,\r\n    y00,\r\n    x0,\r\n    y0;\r\n\r\nvar areaStream = {\r\n  point: noop,\r\n  lineStart: noop,\r\n  lineEnd: noop,\r\n  polygonStart: function() {\r\n    areaStream.lineStart = areaRingStart;\r\n    areaStream.lineEnd = areaRingEnd;\r\n  },\r\n  polygonEnd: function() {\r\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\r\n    areaSum.add(abs(areaRingSum));\r\n    areaRingSum.reset();\r\n  },\r\n  result: function() {\r\n    var area = areaSum / 2;\r\n    areaSum.reset();\r\n    return area;\r\n  }\r\n};\r\n\r\nfunction areaRingStart() {\r\n  areaStream.point = areaPointFirst;\r\n}\r\n\r\nfunction areaPointFirst(x, y) {\r\n  areaStream.point = areaPoint;\r\n  x00 = x0 = x, y00 = y0 = y;\r\n}\r\n\r\nfunction areaPoint(x, y) {\r\n  areaRingSum.add(y0 * x - x0 * y);\r\n  x0 = x, y0 = y;\r\n}\r\n\r\nfunction areaRingEnd() {\r\n  areaPoint(x00, y00);\r\n}\r\n\r\nexport default areaStream;\r\n", "import noop from \"../noop.js\";\r\n\r\nvar x0 = Infinity,\r\n    y0 = x0,\r\n    x1 = -x0,\r\n    y1 = x1;\r\n\r\nvar boundsStream = {\r\n  point: boundsPoint,\r\n  lineStart: noop,\r\n  lineEnd: noop,\r\n  polygonStart: noop,\r\n  polygonEnd: noop,\r\n  result: function() {\r\n    var bounds = [[x0, y0], [x1, y1]];\r\n    x1 = y1 = -(y0 = x0 = Infinity);\r\n    return bounds;\r\n  }\r\n};\r\n\r\nfunction boundsPoint(x, y) {\r\n  if (x < x0) x0 = x;\r\n  if (x > x1) x1 = x;\r\n  if (y < y0) y0 = y;\r\n  if (y > y1) y1 = y;\r\n}\r\n\r\nexport default boundsStream;\r\n", "import {sqrt} from \"../math.js\";\r\n\r\n// TODO Enforce positive area for exterior, negative area for interior?\r\n\r\nvar X0 = 0,\r\n    Y0 = 0,\r\n    Z0 = 0,\r\n    X1 = 0,\r\n    Y1 = 0,\r\n    Z1 = 0,\r\n    X2 = 0,\r\n    Y2 = 0,\r\n    Z2 = 0,\r\n    x00,\r\n    y00,\r\n    x0,\r\n    y0;\r\n\r\nvar centroidStream = {\r\n  point: centroidPoint,\r\n  lineStart: centroidLineStart,\r\n  lineEnd: centroidLineEnd,\r\n  polygonStart: function() {\r\n    centroidStream.lineStart = centroidRingStart;\r\n    centroidStream.lineEnd = centroidRingEnd;\r\n  },\r\n  polygonEnd: function() {\r\n    centroidStream.point = centroidPoint;\r\n    centroidStream.lineStart = centroidLineStart;\r\n    centroidStream.lineEnd = centroidLineEnd;\r\n  },\r\n  result: function() {\r\n    var centroid = Z2 ? [X2 / Z2, Y2 / Z2]\r\n        : Z1 ? [X1 / Z1, Y1 / Z1]\r\n        : Z0 ? [X0 / Z0, Y0 / Z0]\r\n        : [NaN, NaN];\r\n    X0 = Y0 = Z0 =\r\n    X1 = Y1 = Z1 =\r\n    X2 = Y2 = Z2 = 0;\r\n    return centroid;\r\n  }\r\n};\r\n\r\nfunction centroidPoint(x, y) {\r\n  X0 += x;\r\n  Y0 += y;\r\n  ++Z0;\r\n}\r\n\r\nfunction centroidLineStart() {\r\n  centroidStream.point = centroidPointFirstLine;\r\n}\r\n\r\nfunction centroidPointFirstLine(x, y) {\r\n  centroidStream.point = centroidPointLine;\r\n  centroidPoint(x0 = x, y0 = y);\r\n}\r\n\r\nfunction centroidPointLine(x, y) {\r\n  var dx = x - x0, dy = y - y0, z = sqrt(dx * dx + dy * dy);\r\n  X1 += z * (x0 + x) / 2;\r\n  Y1 += z * (y0 + y) / 2;\r\n  Z1 += z;\r\n  centroidPoint(x0 = x, y0 = y);\r\n}\r\n\r\nfunction centroidLineEnd() {\r\n  centroidStream.point = centroidPoint;\r\n}\r\n\r\nfunction centroidRingStart() {\r\n  centroidStream.point = centroidPointFirstRing;\r\n}\r\n\r\nfunction centroidRingEnd() {\r\n  centroidPointRing(x00, y00);\r\n}\r\n\r\nfunction centroidPointFirstRing(x, y) {\r\n  centroidStream.point = centroidPointRing;\r\n  centroidPoint(x00 = x0 = x, y00 = y0 = y);\r\n}\r\n\r\nfunction centroidPointRing(x, y) {\r\n  var dx = x - x0,\r\n      dy = y - y0,\r\n      z = sqrt(dx * dx + dy * dy);\r\n\r\n  X1 += z * (x0 + x) / 2;\r\n  Y1 += z * (y0 + y) / 2;\r\n  Z1 += z;\r\n\r\n  z = y0 * x - x0 * y;\r\n  X2 += z * (x0 + x);\r\n  Y2 += z * (y0 + y);\r\n  Z2 += z * 3;\r\n  centroidPoint(x0 = x, y0 = y);\r\n}\r\n\r\nexport default centroidStream;\r\n", "import {tau} from \"../math.js\";\r\nimport noop from \"../noop.js\";\r\n\r\nexport default function PathContext(context) {\r\n  this._context = context;\r\n}\r\n\r\nPathContext.prototype = {\r\n  _radius: 4.5,\r\n  pointRadius: function(_) {\r\n    return this._radius = _, this;\r\n  },\r\n  polygonStart: function() {\r\n    this._line = 0;\r\n  },\r\n  polygonEnd: function() {\r\n    this._line = NaN;\r\n  },\r\n  lineStart: function() {\r\n    this._point = 0;\r\n  },\r\n  lineEnd: function() {\r\n    if (this._line === 0) this._context.closePath();\r\n    this._point = NaN;\r\n  },\r\n  point: function(x, y) {\r\n    switch (this._point) {\r\n      case 0: {\r\n        this._context.moveTo(x, y);\r\n        this._point = 1;\r\n        break;\r\n      }\r\n      case 1: {\r\n        this._context.lineTo(x, y);\r\n        break;\r\n      }\r\n      default: {\r\n        this._context.moveTo(x + this._radius, y);\r\n        this._context.arc(x, y, this._radius, 0, tau);\r\n        break;\r\n      }\r\n    }\r\n  },\r\n  result: noop\r\n};\r\n", "import adder from \"../adder.js\";\r\nimport {sqrt} from \"../math.js\";\r\nimport noop from \"../noop.js\";\r\n\r\nvar lengthSum = adder(),\r\n    lengthRing,\r\n    x00,\r\n    y00,\r\n    x0,\r\n    y0;\r\n\r\nvar lengthStream = {\r\n  point: noop,\r\n  lineStart: function() {\r\n    lengthStream.point = lengthPointFirst;\r\n  },\r\n  lineEnd: function() {\r\n    if (lengthRing) lengthPoint(x00, y00);\r\n    lengthStream.point = noop;\r\n  },\r\n  polygonStart: function() {\r\n    lengthRing = true;\r\n  },\r\n  polygonEnd: function() {\r\n    lengthRing = null;\r\n  },\r\n  result: function() {\r\n    var length = +lengthSum;\r\n    lengthSum.reset();\r\n    return length;\r\n  }\r\n};\r\n\r\nfunction lengthPointFirst(x, y) {\r\n  lengthStream.point = lengthPoint;\r\n  x00 = x0 = x, y00 = y0 = y;\r\n}\r\n\r\nfunction lengthPoint(x, y) {\r\n  x0 -= x, y0 -= y;\r\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\r\n  x0 = x, y0 = y;\r\n}\r\n\r\nexport default lengthStream;\r\n", "export default function PathString() {\r\n  this._string = [];\r\n}\r\n\r\nPathString.prototype = {\r\n  _radius: 4.5,\r\n  _circle: circle(4.5),\r\n  pointRadius: function(_) {\r\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\r\n    return this;\r\n  },\r\n  polygonStart: function() {\r\n    this._line = 0;\r\n  },\r\n  polygonEnd: function() {\r\n    this._line = NaN;\r\n  },\r\n  lineStart: function() {\r\n    this._point = 0;\r\n  },\r\n  lineEnd: function() {\r\n    if (this._line === 0) this._string.push(\"Z\");\r\n    this._point = NaN;\r\n  },\r\n  point: function(x, y) {\r\n    switch (this._point) {\r\n      case 0: {\r\n        this._string.push(\"M\", x, \",\", y);\r\n        this._point = 1;\r\n        break;\r\n      }\r\n      case 1: {\r\n        this._string.push(\"L\", x, \",\", y);\r\n        break;\r\n      }\r\n      default: {\r\n        if (this._circle == null) this._circle = circle(this._radius);\r\n        this._string.push(\"M\", x, \",\", y, this._circle);\r\n        break;\r\n      }\r\n    }\r\n  },\r\n  result: function() {\r\n    if (this._string.length) {\r\n      var result = this._string.join(\"\");\r\n      this._string = [];\r\n      return result;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n};\r\n\r\nfunction circle(radius) {\r\n  return \"m0,\" + radius\r\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\r\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\r\n      + \"z\";\r\n}\r\n", "import identity from \"../identity.js\";\r\nimport stream from \"../stream.js\";\r\nimport pathArea from \"./area.js\";\r\nimport pathBounds from \"./bounds.js\";\r\nimport pathCentroid from \"./centroid.js\";\r\nimport PathContext from \"./context.js\";\r\nimport pathMeasure from \"./measure.js\";\r\nimport PathString from \"./string.js\";\r\n\r\nexport default function(projection, context) {\r\n  var pointRadius = 4.5,\r\n      projectionStream,\r\n      contextStream;\r\n\r\n  function path(object) {\r\n    if (object) {\r\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\r\n      stream(object, projectionStream(contextStream));\r\n    }\r\n    return contextStream.result();\r\n  }\r\n\r\n  path.area = function(object) {\r\n    stream(object, projectionStream(pathArea));\r\n    return pathArea.result();\r\n  };\r\n\r\n  path.measure = function(object) {\r\n    stream(object, projectionStream(pathMeasure));\r\n    return pathMeasure.result();\r\n  };\r\n\r\n  path.bounds = function(object) {\r\n    stream(object, projectionStream(pathBounds));\r\n    return pathBounds.result();\r\n  };\r\n\r\n  path.centroid = function(object) {\r\n    stream(object, projectionStream(pathCentroid));\r\n    return pathCentroid.result();\r\n  };\r\n\r\n  path.projection = function(_) {\r\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream, path) : projection;\r\n  };\r\n\r\n  path.context = function(_) {\r\n    if (!arguments.length) return context;\r\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\r\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\r\n    return path;\r\n  };\r\n\r\n  path.pointRadius = function(_) {\r\n    if (!arguments.length) return pointRadius;\r\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\r\n    return path;\r\n  };\r\n\r\n  return path.projection(projection).context(context);\r\n}\r\n", "export default function(methods) {\r\n  return {\r\n    stream: transformer(methods)\r\n  };\r\n}\r\n\r\nexport function transformer(methods) {\r\n  return function(stream) {\r\n    var s = new TransformStream;\r\n    for (var key in methods) s[key] = methods[key];\r\n    s.stream = stream;\r\n    return s;\r\n  };\r\n}\r\n\r\nfunction TransformStream() {}\r\n\r\nTransformStream.prototype = {\r\n  constructor: TransformStream,\r\n  point: function(x, y) { this.stream.point(x, y); },\r\n  sphere: function() { this.stream.sphere(); },\r\n  lineStart: function() { this.stream.lineStart(); },\r\n  lineEnd: function() { this.stream.lineEnd(); },\r\n  polygonStart: function() { this.stream.polygonStart(); },\r\n  polygonEnd: function() { this.stream.polygonEnd(); }\r\n};\r\n", "import {default as geoStream} from \"../stream.js\";\r\nimport boundsStream from \"../path/bounds.js\";\r\n\r\nfunction fit(projection, fitBounds, object) {\r\n  var clip = projection.clipExtent && projection.clipExtent();\r\n  projection.scale(150).translate([0, 0]);\r\n  if (clip != null) projection.clipExtent(null);\r\n  geoStream(object, projection.stream(boundsStream));\r\n  fitBounds(boundsStream.result());\r\n  if (clip != null) projection.clipExtent(clip);\r\n  return projection;\r\n}\r\n\r\nexport function fitExtent(projection, extent, object) {\r\n  return fit(projection, function(b) {\r\n    var w = extent[1][0] - extent[0][0],\r\n        h = extent[1][1] - extent[0][1],\r\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\r\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\r\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\r\n    projection.scale(150 * k).translate([x, y]);\r\n  }, object);\r\n}\r\n\r\nexport function fitSize(projection, size, object) {\r\n  return fitExtent(projection, [[0, 0], size], object);\r\n}\r\n\r\nexport function fitWidth(projection, width, object) {\r\n  return fit(projection, function(b) {\r\n    var w = +width,\r\n        k = w / (b[1][0] - b[0][0]),\r\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\r\n        y = -k * b[0][1];\r\n    projection.scale(150 * k).translate([x, y]);\r\n  }, object);\r\n}\r\n\r\nexport function fitHeight(projection, height, object) {\r\n  return fit(projection, function(b) {\r\n    var h = +height,\r\n        k = h / (b[1][1] - b[0][1]),\r\n        x = -k * b[0][0],\r\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\r\n    projection.scale(150 * k).translate([x, y]);\r\n  }, object);\r\n}\r\n", "import {cartesian} from \"../cartesian.js\";\r\nimport {abs, asin, atan2, cos, epsilon, radians, sqrt} from \"../math.js\";\r\nimport {transformer} from \"../transform.js\";\r\n\r\nvar maxDepth = 16, // maximum depth of subdivision\r\n    cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\r\n\r\nexport default function(project, delta2) {\r\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\r\n}\r\n\r\nfunction resampleNone(project) {\r\n  return transformer({\r\n    point: function(x, y) {\r\n      x = project(x, y);\r\n      this.stream.point(x[0], x[1]);\r\n    }\r\n  });\r\n}\r\n\r\nfunction resample(project, delta2) {\r\n\r\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\r\n    var dx = x1 - x0,\r\n        dy = y1 - y0,\r\n        d2 = dx * dx + dy * dy;\r\n    if (d2 > 4 * delta2 && depth--) {\r\n      var a = a0 + a1,\r\n          b = b0 + b1,\r\n          c = c0 + c1,\r\n          m = sqrt(a * a + b * b + c * c),\r\n          phi2 = asin(c /= m),\r\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\r\n          p = project(lambda2, phi2),\r\n          x2 = p[0],\r\n          y2 = p[1],\r\n          dx2 = x2 - x0,\r\n          dy2 = y2 - y0,\r\n          dz = dy * dx2 - dx * dy2;\r\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\r\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\r\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\r\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\r\n        stream.point(x2, y2);\r\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\r\n      }\r\n    }\r\n  }\r\n  return function(stream) {\r\n    var lambda00, x00, y00, a00, b00, c00, // first point\r\n        lambda0, x0, y0, a0, b0, c0; // previous point\r\n\r\n    var resampleStream = {\r\n      point: point,\r\n      lineStart: lineStart,\r\n      lineEnd: lineEnd,\r\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\r\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\r\n    };\r\n\r\n    function point(x, y) {\r\n      x = project(x, y);\r\n      stream.point(x[0], x[1]);\r\n    }\r\n\r\n    function lineStart() {\r\n      x0 = NaN;\r\n      resampleStream.point = linePoint;\r\n      stream.lineStart();\r\n    }\r\n\r\n    function linePoint(lambda, phi) {\r\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\r\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\r\n      stream.point(x0, y0);\r\n    }\r\n\r\n    function lineEnd() {\r\n      resampleStream.point = point;\r\n      stream.lineEnd();\r\n    }\r\n\r\n    function ringStart() {\r\n      lineStart();\r\n      resampleStream.point = ringPoint;\r\n      resampleStream.lineEnd = ringEnd;\r\n    }\r\n\r\n    function ringPoint(lambda, phi) {\r\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\r\n      resampleStream.point = linePoint;\r\n    }\r\n\r\n    function ringEnd() {\r\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\r\n      resampleStream.lineEnd = lineEnd;\r\n      lineEnd();\r\n    }\r\n\r\n    return resampleStream;\r\n  };\r\n}\r\n", "import clipAntimeridian from \"../clip/antimeridian.js\";\r\nimport clipCircle from \"../clip/circle.js\";\r\nimport clipRectangle from \"../clip/rectangle.js\";\r\nimport compose from \"../compose.js\";\r\nimport identity from \"../identity.js\";\r\nimport {cos, degrees, radians, sin, sqrt} from \"../math.js\";\r\nimport {rotateRadians} from \"../rotation.js\";\r\nimport {transformer} from \"../transform.js\";\r\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit.js\";\r\nimport resample from \"./resample.js\";\r\n\r\nvar transformRadians = transformer({\r\n  point: function(x, y) {\r\n    this.stream.point(x * radians, y * radians);\r\n  }\r\n});\r\n\r\nfunction transformRotate(rotate) {\r\n  return transformer({\r\n    point: function(x, y) {\r\n      var r = rotate(x, y);\r\n      return this.stream.point(r[0], r[1]);\r\n    }\r\n  });\r\n}\r\n\r\nfunction scaleTranslate(k, dx, dy, sx, sy) {\r\n  function transform(x, y) {\r\n    x *= sx; y *= sy;\r\n    return [dx + k * x, dy - k * y];\r\n  }\r\n  transform.invert = function(x, y) {\r\n    return [(x - dx) / k * sx, (dy - y) / k * sy];\r\n  };\r\n  return transform;\r\n}\r\n\r\nfunction scaleTranslateRotate(k, dx, dy, sx, sy, alpha) {\r\n  var cosAlpha = cos(alpha),\r\n      sinAlpha = sin(alpha),\r\n      a = cosAlpha * k,\r\n      b = sinAlpha * k,\r\n      ai = cosAlpha / k,\r\n      bi = sinAlpha / k,\r\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\r\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\r\n  function transform(x, y) {\r\n    x *= sx; y *= sy;\r\n    return [a * x - b * y + dx, dy - b * x - a * y];\r\n  }\r\n  transform.invert = function(x, y) {\r\n    return [sx * (ai * x - bi * y + ci), sy * (fi - bi * x - ai * y)];\r\n  };\r\n  return transform;\r\n}\r\n\r\nexport default function projection(project) {\r\n  return projectionMutator(function() { return project; })();\r\n}\r\n\r\nexport function projectionMutator(projectAt) {\r\n  var project,\r\n      k = 150, // scale\r\n      x = 480, y = 250, // translate\r\n      lambda = 0, phi = 0, // center\r\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, // pre-rotate\r\n      alpha = 0, // post-rotate angle\r\n      sx = 1, // reflectX\r\n      sy = 1, // reflectX\r\n      theta = null, preclip = clipAntimeridian, // pre-clip angle\r\n      x0 = null, y0, x1, y1, postclip = identity, // post-clip extent\r\n      delta2 = 0.5, // precision\r\n      projectResample,\r\n      projectTransform,\r\n      projectRotateTransform,\r\n      cache,\r\n      cacheStream;\r\n\r\n  function projection(point) {\r\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\r\n  }\r\n\r\n  function invert(point) {\r\n    point = projectRotateTransform.invert(point[0], point[1]);\r\n    return point && [point[0] * degrees, point[1] * degrees];\r\n  }\r\n\r\n  projection.stream = function(stream) {\r\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\r\n  };\r\n\r\n  projection.preclip = function(_) {\r\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\r\n  };\r\n\r\n  projection.postclip = function(_) {\r\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\r\n  };\r\n\r\n  projection.clipAngle = function(_) {\r\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\r\n  };\r\n\r\n  projection.clipExtent = function(_) {\r\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\r\n  };\r\n\r\n  projection.scale = function(_) {\r\n    return arguments.length ? (k = +_, recenter()) : k;\r\n  };\r\n\r\n  projection.translate = function(_) {\r\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\r\n  };\r\n\r\n  projection.center = function(_) {\r\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\r\n  };\r\n\r\n  projection.rotate = function(_) {\r\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\r\n  };\r\n\r\n  projection.angle = function(_) {\r\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\r\n  };\r\n\r\n  projection.reflectX = function(_) {\r\n    return arguments.length ? (sx = _ ? -1 : 1, recenter()) : sx < 0;\r\n  };\r\n\r\n  projection.reflectY = function(_) {\r\n    return arguments.length ? (sy = _ ? -1 : 1, recenter()) : sy < 0;\r\n  };\r\n\r\n  projection.precision = function(_) {\r\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\r\n  };\r\n\r\n  projection.fitExtent = function(extent, object) {\r\n    return fitExtent(projection, extent, object);\r\n  };\r\n\r\n  projection.fitSize = function(size, object) {\r\n    return fitSize(projection, size, object);\r\n  };\r\n\r\n  projection.fitWidth = function(width, object) {\r\n    return fitWidth(projection, width, object);\r\n  };\r\n\r\n  projection.fitHeight = function(height, object) {\r\n    return fitHeight(projection, height, object);\r\n  };\r\n\r\n  function recenter() {\r\n    var center = scaleTranslateRotate(k, 0, 0, sx, sy, alpha).apply(null, project(lambda, phi)),\r\n        transform = (alpha ? scaleTranslateRotate : scaleTranslate)(k, x - center[0], y - center[1], sx, sy, alpha);\r\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\r\n    projectTransform = compose(project, transform);\r\n    projectRotateTransform = compose(rotate, projectTransform);\r\n    projectResample = resample(projectTransform, delta2);\r\n    return reset();\r\n  }\r\n\r\n  function reset() {\r\n    cache = cacheStream = null;\r\n    return projection;\r\n  }\r\n\r\n  return function() {\r\n    project = projectAt.apply(this, arguments);\r\n    projection.invert = project.invert && invert;\r\n    return recenter();\r\n  };\r\n}\r\n", "import {asin, atan2, cos, sin, sqrt} from \"../math.js\";\r\n\r\nexport function azimuthalRaw(scale) {\r\n  return function(x, y) {\r\n    var cx = cos(x),\r\n        cy = cos(y),\r\n        k = scale(cx * cy);\r\n    return [\r\n      k * cy * sin(x),\r\n      k * sin(y)\r\n    ];\r\n  }\r\n}\r\n\r\nexport function azimuthalInvert(angle) {\r\n  return function(x, y) {\r\n    var z = sqrt(x * x + y * y),\r\n        c = angle(z),\r\n        sc = sin(c),\r\n        cc = cos(c);\r\n    return [\r\n      atan2(x * sc, z * cc),\r\n      asin(z && y * sc / z)\r\n    ];\r\n  }\r\n}\r\n", "import {asin, sqrt} from \"../math.js\";\r\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal.js\";\r\nimport projection from \"./index.js\";\r\n\r\nexport var azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\r\n  return sqrt(2 / (1 + cxcy));\r\n});\r\n\r\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\r\n  return 2 * asin(z / 2);\r\n});\r\n\r\nexport default function() {\r\n  return projection(azimuthalEqualAreaRaw)\r\n      .scale(124.75)\r\n      .clipAngle(180 - 1e-3);\r\n}\r\n", "import {acos, sin} from \"../math.js\";\r\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal.js\";\r\nimport projection from \"./index.js\";\r\n\r\nexport var azimuthalEquidistantRaw = azimuthalRaw(function(c) {\r\n  return (c = acos(c)) && c / sin(c);\r\n});\r\n\r\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\r\n  return z;\r\n});\r\n\r\nexport default function() {\r\n  return projection(azimuthalEquidistantRaw)\r\n      .scale(79.4188)\r\n      .clipAngle(180 - 1e-3);\r\n}\r\n", "import {atan, exp, halfPi, log, pi, tan, tau} from \"../math.js\";\r\nimport rotation from \"../rotation.js\";\r\nimport projection from \"./index.js\";\r\n\r\nexport function mercatorRaw(lambda, phi) {\r\n  return [lambda, log(tan((halfPi + phi) / 2))];\r\n}\r\n\r\nmercatorRaw.invert = function(x, y) {\r\n  return [x, 2 * atan(exp(y)) - halfPi];\r\n};\r\n\r\nexport default function() {\r\n  return mercatorProjection(mercatorRaw)\r\n      .scale(961 / tau);\r\n}\r\n\r\nexport function mercatorProjection(project) {\r\n  var m = projection(project),\r\n      center = m.center,\r\n      scale = m.scale,\r\n      translate = m.translate,\r\n      clipExtent = m.clipExtent,\r\n      x0 = null, y0, x1, y1; // clip extent\r\n\r\n  m.scale = function(_) {\r\n    return arguments.length ? (scale(_), reclip()) : scale();\r\n  };\r\n\r\n  m.translate = function(_) {\r\n    return arguments.length ? (translate(_), reclip()) : translate();\r\n  };\r\n\r\n  m.center = function(_) {\r\n    return arguments.length ? (center(_), reclip()) : center();\r\n  };\r\n\r\n  m.clipExtent = function(_) {\r\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\r\n  };\r\n\r\n  function reclip() {\r\n    var k = pi * scale(),\r\n        t = m(rotation(m.rotate()).invert([0, 0]));\r\n    return clipExtent(x0 == null\r\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\r\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\r\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\r\n  }\r\n\r\n  return reclip();\r\n}\r\n", "import projection from \"./index.js\";\r\n\r\nexport function equirectangularRaw(lambda, phi) {\r\n  return [lambda, phi];\r\n}\r\n\r\nequirectangularRaw.invert = equirectangularRaw;\r\n\r\nexport default function() {\r\n  return projection(equirectangularRaw)\r\n      .scale(152.63);\r\n}\r\n", "import projection from \"./index.js\";\r\nimport {abs, asin, cos, epsilon2, sin, sqrt} from \"../math.js\";\r\n\r\nvar A1 = 1.340264,\r\n    A2 = -0.081106,\r\n    A3 = 0.000893,\r\n    A4 = 0.003796,\r\n    M = sqrt(3) / 2,\r\n    iterations = 12;\r\n\r\nexport function equalEarthRaw(lambda, phi) {\r\n  var l = asin(M * sin(phi)), l2 = l * l, l6 = l2 * l2 * l2;\r\n  return [\r\n    lambda * cos(l) / (M * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2))),\r\n    l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2))\r\n  ];\r\n}\r\n\r\nequalEarthRaw.invert = function(x, y) {\r\n  var l = y, l2 = l * l, l6 = l2 * l2 * l2;\r\n  for (var i = 0, delta, fy, fpy; i < iterations; ++i) {\r\n    fy = l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2)) - y;\r\n    fpy = A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2);\r\n    l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2;\r\n    if (abs(delta) < epsilon2) break;\r\n  }\r\n  return [\r\n    M * x * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2)) / cos(l),\r\n    asin(sin(l) / M)\r\n  ];\r\n};\r\n\r\nexport default function() {\r\n  return projection(equalEarthRaw)\r\n      .scale(177.158);\r\n}\r\n", "import {atan, cos, sin} from \"../math.js\";\r\nimport {azimuthalInvert} from \"./azimuthal.js\";\r\nimport projection from \"./index.js\";\r\n\r\nexport function gnomonicRaw(x, y) {\r\n  var cy = cos(y), k = cos(x) * cy;\r\n  return [cy * sin(x) / k, sin(y) / k];\r\n}\r\n\r\ngnomonicRaw.invert = azimuthalInvert(atan);\r\n\r\nexport default function() {\r\n  return projection(gnomonicRaw)\r\n      .scale(144.049)\r\n      .clipAngle(60);\r\n}\r\n", "import projection from \"./index.js\";\r\nimport {abs, epsilon} from \"../math.js\";\r\n\r\nexport function naturalEarth1Raw(lambda, phi) {\r\n  var phi2 = phi * phi, phi4 = phi2 * phi2;\r\n  return [\r\n    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\r\n    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\r\n  ];\r\n}\r\n\r\nnaturalEarth1Raw.invert = function(x, y) {\r\n  var phi = y, i = 25, delta;\r\n  do {\r\n    var phi2 = phi * phi, phi4 = phi2 * phi2;\r\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\r\n        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\r\n  } while (abs(delta) > epsilon && --i > 0);\r\n  return [\r\n    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\r\n    phi\r\n  ];\r\n};\r\n\r\nexport default function() {\r\n  return projection(naturalEarth1Raw)\r\n      .scale(175.295);\r\n}\r\n", "import {asin, cos, epsilon, sin} from \"../math.js\";\r\nimport {azimuthalInvert} from \"./azimuthal.js\";\r\nimport projection from \"./index.js\";\r\n\r\nexport function orthographicRaw(x, y) {\r\n  return [cos(y) * sin(x), sin(y)];\r\n}\r\n\r\northographicRaw.invert = azimuthalInvert(asin);\r\n\r\nexport default function() {\r\n  return projection(orthographicRaw)\r\n      .scale(249.5)\r\n      .clipAngle(90 + epsilon);\r\n}\r\n", "import {atan, cos, sin} from \"../math.js\";\r\nimport {azimuthalInvert} from \"./azimuthal.js\";\r\nimport projection from \"./index.js\";\r\n\r\nexport function stereographicRaw(x, y) {\r\n  var cy = cos(y), k = 1 + cos(x) * cy;\r\n  return [cy * sin(x) / k, sin(y) / k];\r\n}\r\n\r\nstereographicRaw.invert = azimuthalInvert(function(z) {\r\n  return 2 * atan(z);\r\n});\r\n\r\nexport default function() {\r\n  return projection(stereographicRaw)\r\n      .scale(250)\r\n      .clipAngle(142);\r\n}\r\n", "import {atan, exp, halfPi, log, tan} from \"../math.js\";\r\nimport {mercatorProjection} from \"./mercator.js\";\r\n\r\nexport function transverseMercatorRaw(lambda, phi) {\r\n  return [log(tan((halfPi + phi) / 2)), -lambda];\r\n}\r\n\r\ntransverseMercatorRaw.invert = function(x, y) {\r\n  return [-y, 2 * atan(exp(x)) - halfPi];\r\n};\r\n\r\nexport default function() {\r\n  var m = mercatorProjection(transverseMercatorRaw),\r\n      center = m.center,\r\n      rotate = m.rotate;\r\n\r\n  m.center = function(_) {\r\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\r\n  };\r\n\r\n  m.rotate = function(_) {\r\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\r\n  };\r\n\r\n  return rotate([0, 0, 90])\r\n      .scale(159.155);\r\n}\r\n", "/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { useMemo } from 'react'\nimport isFunction from 'lodash/isFunction'\nimport get from 'lodash/get'\nimport { format } from 'd3-format'\nimport {\n    geoPath,\n    geoAzimuthalEqualArea,\n    geoAzimuthalEquidistant,\n    geoGnomonic,\n    geoOrthographic,\n    geoStereographic,\n    geoEqualEarth,\n    geoEquirectangular,\n    geoMercator,\n    geoTransverseMercator,\n    geoNaturalEarth1,\n    geoGraticule,\n} from 'd3-geo'\nimport { guessQuantizeColorScale, useTheme } from '@nivo/core'\nimport { useInheritedColor } from '@nivo/colors'\nimport { useQuantizeColorScaleLegendData } from '@nivo/legends'\n\nexport const projectionById = {\n    azimuthalEqualArea: geoAzimuthalEqualArea,\n    azimuthalEquidistant: geoAzimuthalEquidistant,\n    gnomonic: geoGnomonic,\n    orthographic: geoOrthographic,\n    stereographic: geoStereographic,\n    equalEarth: geoEqualEarth,\n    equirectangular: geoEquirectangular,\n    mercator: geoMercator,\n    transverseMercator: geoTransverseMercator,\n    naturalEarth1: geoNaturalEarth1,\n}\n\nexport const useGeoMap = ({\n    width,\n    height,\n    projectionType,\n    projectionScale,\n    projectionTranslation,\n    projectionRotation,\n    fillColor,\n    borderWidth,\n    borderColor,\n}) => {\n    const projection = useMemo(() => {\n        return projectionById[projectionType]()\n            .scale(projectionScale)\n            .translate([width * projectionTranslation[0], height * projectionTranslation[1]])\n            .rotate(projectionRotation)\n    }, [\n        width,\n        height,\n        projectionType,\n        projectionScale,\n        projectionTranslation[0],\n        projectionTranslation[1],\n        projectionRotation[0],\n        projectionRotation[1],\n        projectionRotation[2],\n    ])\n    const path = useMemo(() => geoPath(projection), [projection])\n    const graticule = useMemo(() => geoGraticule())\n\n    const theme = useTheme()\n    const getBorderWidth = useMemo(\n        () => (typeof borderWidth === 'function' ? borderWidth : () => borderWidth),\n        [borderWidth]\n    )\n    const getBorderColor = useInheritedColor(borderColor, theme)\n    const getFillColor = useMemo(\n        () => (typeof fillColor === 'function' ? fillColor : () => fillColor),\n        [fillColor]\n    )\n\n    return {\n        projection,\n        path,\n        graticule,\n        getBorderWidth,\n        getBorderColor,\n        getFillColor,\n    }\n}\n\nexport const useChoropleth = ({\n    features,\n    data,\n    match,\n    label,\n    value,\n    valueFormat,\n    colors,\n    unknownColor,\n    domain,\n}) => {\n    const findMatchingDatum = useMemo(() => {\n        if (isFunction(match)) return match\n        return (feature, datum) => {\n            const featureKey = get(feature, match)\n            const datumKey = get(datum, match)\n\n            return featureKey && featureKey === datumKey\n        }\n    }, [match])\n    const getLabel = useMemo(\n        () => (isFunction(label) ? label : datum => get(datum, label)),\n        [label]\n    )\n    const getValue = useMemo(\n        () => (isFunction(value) ? value : datum => get(datum, value)),\n        [value]\n    )\n    const valueFormatter = useMemo(() => {\n        if (valueFormat === undefined) return d => d\n        if (isFunction(valueFormat)) return valueFormat\n        return format(valueFormat)\n    }, [valueFormat])\n\n    const colorScale = useMemo(\n        () => guessQuantizeColorScale(colors).domain(domain),\n        [colors, domain]\n    )\n    const getFillColor = useMemo(() => {\n        return feature => {\n            if (feature.value === undefined) return unknownColor\n            return colorScale(feature.value)\n        }\n    }, [colorScale, unknownColor])\n\n    const boundFeatures = useMemo(\n        () =>\n            features.map(feature => {\n                const datum = data.find(datum => findMatchingDatum(feature, datum))\n                const datumValue = getValue(datum)\n\n                if (datum) {\n                    const featureWithData = {\n                        ...feature,\n                        data: datum,\n                        value: datumValue,\n                        formattedValue: valueFormatter(datumValue),\n                    }\n                    featureWithData.color = getFillColor(featureWithData)\n                    featureWithData.label = getLabel(featureWithData)\n\n                    return featureWithData\n                }\n\n                return feature\n            }),\n        [features, data, findMatchingDatum, getValue, valueFormatter, getFillColor]\n    )\n\n    const legendData = useQuantizeColorScaleLegendData({\n        scale: colorScale,\n        valueFormat: valueFormatter,\n    })\n\n    return {\n        colorScale,\n        getFillColor,\n        boundFeatures,\n        valueFormatter,\n        legendData,\n    }\n}\n", "/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { BasicTooltip } from '@nivo/tooltip'\n\nconst ChoroplethTooltip = memo(({ feature }) => {\n    if (feature.data === undefined) return null\n\n    return (\n        <BasicTooltip\n            id={feature.label}\n            color={feature.color}\n            enableChip={true}\n            value={feature.formattedValue}\n        />\n    )\n})\n\nChoroplethTooltip.propTypes = {\n    feature: PropTypes.object.isRequired,\n}\n\nChoroplethTooltip.displayName = 'ChoroplethTooltip'\n\nexport default ChoroplethTooltip\n", "/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { quantizeColorScalePropType } from '@nivo/core'\nimport { inheritedColorPropType } from '@nivo/colors'\nimport { projectionById } from './hooks'\nimport ChoroplethTooltip from './ChoroplethTooltip'\n\nconst commonPropTypes = {\n    features: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            type: PropTypes.oneOf(['Feature']).isRequired,\n            properties: PropTypes.object,\n            geometry: PropTypes.object.isRequired,\n        })\n    ).isRequired,\n\n    projectionType: PropTypes.oneOf(Object.keys(projectionById)).isRequired,\n    projectionScale: PropTypes.number.isRequired,\n    projectionTranslation: PropTypes.arrayOf(PropTypes.number).isRequired,\n    projectionRotation: PropTypes.arrayOf(PropTypes.number).isRequired,\n\n    fillColor: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    borderWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n    borderColor: inheritedColorPropType.isRequired,\n\n    enableGraticule: PropTypes.bool.isRequired,\n    graticuleLineWidth: PropTypes.number.isRequired,\n    graticuleLineColor: PropTypes.string.isRequired,\n\n    isInteractive: PropTypes.bool.isRequired,\n    onMouseEnter: PropTypes.func.isRequired,\n    onMouseMove: PropTypes.func.isRequired,\n    onMouseLeave: PropTypes.func.isRequired,\n    onClick: PropTypes.func.isRequired,\n    tooltip: PropTypes.any,\n\n    layers: PropTypes.arrayOf(\n        PropTypes.oneOfType([PropTypes.oneOf(['graticule', 'features']), PropTypes.func])\n    ).isRequired,\n}\n\nexport const GeoMapPropTypes = {\n    ...commonPropTypes,\n    role: PropTypes.string.isRequired,\n}\n\nexport const GeoMapCanvasPropTypes = {\n    pixelRatio: PropTypes.number.isRequired,\n    ...commonPropTypes,\n}\n\nconst commonChoroplethPropTypes = {\n    data: PropTypes.arrayOf(PropTypes.object).isRequired,\n    match: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    valueFormat: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n    colors: quantizeColorScalePropType.isRequired,\n    domain: PropTypes.arrayOf(PropTypes.number).isRequired,\n    unknownColor: PropTypes.string.isRequired,\n    layers: PropTypes.arrayOf(\n        PropTypes.oneOfType([PropTypes.oneOf(['graticule', 'features', 'legends']), PropTypes.func])\n    ).isRequired,\n}\n\nexport const ChoroplethPropTypes = {\n    ...GeoMapPropTypes,\n    ...commonChoroplethPropTypes,\n    role: PropTypes.string.isRequired,\n}\n\nexport const ChoroplethCanvasPropTypes = {\n    ...GeoMapCanvasPropTypes,\n    ...commonChoroplethPropTypes,\n}\n\nconst commonDefaultProps = {\n    projectionType: 'mercator',\n    projectionScale: 100,\n    projectionTranslation: [0.5, 0.5],\n    projectionRotation: [0, 0, 0],\n\n    enableGraticule: false,\n    graticuleLineWidth: 0.5,\n    graticuleLineColor: '#999999',\n\n    fillColor: '#dddddd',\n    borderWidth: 0,\n    borderColor: '#000000',\n\n    isInteractive: true,\n    onMouseEnter: () => {},\n    onMouseLeave: () => {},\n    onMouseMove: () => {},\n    onClick: () => {},\n\n    layers: ['graticule', 'features'],\n    legends: [],\n\n    fill: [],\n    defs: [],\n}\n\nexport const GeoMapDefaultProps = {\n    ...commonDefaultProps,\n    role: 'img',\n}\n\nexport const GeoMapCanvasDefaultProps = {\n    ...commonDefaultProps,\n    pixelRatio: typeof window !== 'undefined' ? window.devicePixelRatio || 1 : 1,\n}\n\nconst commonChoroplethDefaultProps = {\n    match: 'id',\n    label: 'id',\n    value: 'value',\n    colors: 'PuBuGn',\n    unknownColor: '#999',\n    tooltip: ChoroplethTooltip,\n    layers: ['graticule', 'features', 'legends'],\n}\n\nexport const ChoroplethDefaultProps = {\n    ...GeoMapDefaultProps,\n    ...commonChoroplethDefaultProps,\n    role: 'img',\n}\n\nexport const ChoroplethCanvasDefaultProps = {\n    ...GeoMapCanvasDefaultProps,\n    ...commonChoroplethDefaultProps,\n}\n", "/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\n\nconst GeoGraticule = memo(({ path, graticule, lineWidth, lineColor }) => {\n    return <path fill=\"none\" strokeWidth={lineWidth} stroke={lineColor} d={path(graticule())} />\n})\n\nGeoGraticule.propTypes = {\n    path: PropTypes.func.isRequired,\n    graticule: PropTypes.func.isRequired,\n    lineWidth: PropTypes.number.isRequired,\n    lineColor: PropTypes.string.isRequired,\n}\n\nGeoGraticule.displayName = 'GeoGraticule'\n\nexport default GeoGraticule\n", "/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\n\nconst GeoMapFeature = memo(\n    ({\n        feature,\n        path,\n        fillColor,\n        borderWidth,\n        borderColor,\n        onClick,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n    }) => {\n        return (\n            <path\n                key={feature.id}\n                fill={feature?.fill ?? fillColor}\n                strokeWidth={borderWidth}\n                stroke={borderColor}\n                strokeLinejoin=\"bevel\"\n                d={path(feature)}\n                onMouseEnter={event => onMouseEnter(feature, event)}\n                onMouseMove={event => onMouseMove(feature, event)}\n                onMouseLeave={event => onMouseLeave(feature, event)}\n                onClick={event => onClick(feature, event)}\n            />\n        )\n    }\n)\n\nGeoMapFeature.propTypes = {\n    feature: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        type: PropTypes.oneOf(['Feature']).isRequired,\n        properties: PropTypes.object,\n        geometry: PropTypes.object.isRequired,\n    }).isRequired,\n    path: PropTypes.func.isRequired,\n\n    fillColor: PropTypes.string.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: PropTypes.string.isRequired,\n\n    onMouseEnter: PropTypes.func.isRequired,\n    onMouseMove: PropTypes.func.isRequired,\n    onMouseLeave: PropTypes.func.isRequired,\n    onClick: PropTypes.func.isRequired,\n}\n\nGeoMapFeature.displayName = 'GeoMapFeature'\n\nexport default GeoMapFeature\n", "/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { Fragment, useCallback, memo } from 'react'\nimport { SvgWrapper, withContainer, useDimensions, useTheme } from '@nivo/core'\nimport { useTooltip } from '@nivo/tooltip'\nimport { GeoMapPropTypes } from './props'\nimport GeoGraticule from './GeoGraticule'\nimport GeoMapFeature from './GeoMapFeature'\nimport { useGeoMap } from './hooks'\n\nconst GeoMap = memo(props => {\n    const {\n        width,\n        height,\n        margin: partialMargin,\n        features,\n        layers = ['graticule', 'features'],\n        projectionType = 'mercator',\n        projectionScale = 100,\n        projectionTranslation = [0.5, 0.5],\n        projectionRotation = [0, 0, 0],\n        fillColor = '#dddddd',\n        borderWidth = 0,\n        borderColor = '#000000',\n        enableGraticule = false,\n        graticuleLineWidth = 0.5,\n        graticuleLineColor = '#999999',\n        isInteractive = true,\n        onClick = () => {},\n        tooltip: Tooltip,\n        role = 'img',\n    } = props\n    const { margin, outerWidth, outerHeight } = useDimensions(width, height, partialMargin)\n    const { graticule, path, getFillColor, getBorderWidth, getBorderColor } = useGeoMap({\n        width,\n        height,\n        projectionType,\n        projectionScale,\n        projectionTranslation,\n        projectionRotation,\n        fillColor,\n        borderWidth,\n        borderColor,\n    })\n\n    const theme = useTheme()\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n    const handleClick = useCallback(\n        (feature, event) => isInteractive && onClick && onClick(feature, event),\n        [isInteractive, onClick]\n    )\n    const handleMouseEnter = useCallback(\n        (feature, event) =>\n            isInteractive && Tooltip && showTooltipFromEvent(<Tooltip feature={feature} />, event),\n        [isInteractive, showTooltipFromEvent, Tooltip]\n    )\n    const handleMouseMove = useCallback(\n        (feature, event) =>\n            isInteractive && Tooltip && showTooltipFromEvent(<Tooltip feature={feature} />, event),\n        [isInteractive, showTooltipFromEvent, Tooltip]\n    )\n    const handleMouseLeave = useCallback(\n        () => isInteractive && hideTooltip(),\n        [isInteractive, hideTooltip]\n    )\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            theme={theme}\n            role={role}\n        >\n            {layers.map((layer, i) => {\n                if (layer === 'graticule') {\n                    if (enableGraticule !== true) return null\n\n                    return (\n                        <GeoGraticule\n                            key=\"graticule\"\n                            path={path}\n                            graticule={graticule}\n                            lineWidth={graticuleLineWidth}\n                            lineColor={graticuleLineColor}\n                        />\n                    )\n                }\n                if (layer === 'features') {\n                    return (\n                        <Fragment key=\"features\">\n                            {features.map(feature => (\n                                <GeoMapFeature\n                                    key={feature.id}\n                                    feature={feature}\n                                    path={path}\n                                    fillColor={getFillColor(feature)}\n                                    borderWidth={getBorderWidth(feature)}\n                                    borderColor={getBorderColor(feature)}\n                                    onMouseEnter={handleMouseEnter}\n                                    onMouseMove={handleMouseMove}\n                                    onMouseLeave={handleMouseLeave}\n                                    onClick={handleClick}\n                                />\n                            ))}\n                        </Fragment>\n                    )\n                }\n\n                return <Fragment key={i}>{layer(props)}</Fragment>\n            })}\n        </SvgWrapper>\n    )\n})\n\nGeoMap.displayName = 'GeoMap'\nGeoMap.propTypes = GeoMapPropTypes\n\nexport default withContainer(GeoMap)\n", "/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { ResponsiveWrapper } from '@nivo/core'\nimport GeoMap from './GeoMap'\n\nconst ResponsiveGeoMap = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <GeoMap width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveGeoMap\n", "/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo, useRef, useEffect, useCallback } from 'react'\nimport { geoContains } from 'd3-geo'\nimport { getRelativeCursor, withContainer, useDimensions, useTheme } from '@nivo/core'\nimport { useTooltip } from '@nivo/tooltip'\nimport { GeoMapCanvasPropTypes } from './props'\nimport { useGeoMap } from './hooks'\n\nconst getFeatureFromMouseEvent = (event, el, features, projection) => {\n    const [x, y] = getRelativeCursor(el, event)\n\n    return features.find(f => geoContains(f, projection.invert([x, y])))\n}\n\nconst GeoMapCanvas = memo(props => {\n    const {\n        width,\n        height,\n        margin: partialMargin,\n        pixelRatio = typeof window !== 'undefined' ? window.devicePixelRatio || 1 : 1,\n        features,\n        layers,\n\n        projectionType = 'mercator',\n        projectionScale = 100,\n        projectionTranslation = [0.5, 0.5],\n        projectionRotation = [0, 0, 0],\n\n        fillColor = '#dddddd',\n        borderWidth = 0,\n        borderColor = '#000000',\n\n        enableGraticule = false,\n        graticuleLineWidth = 0.5,\n        graticuleLineColor = '#999999',\n\n        isInteractive = true,\n        onClick = () => {},\n        onMouseMove = () => {},\n        tooltip: Tooltip,\n    } = props\n\n    const canvasEl = useRef(null)\n    const theme = useTheme()\n    const { margin, outerWidth, outerHeight } = useDimensions(width, height, partialMargin)\n    const { projection, graticule, path, getFillColor, getBorderWidth, getBorderColor } = useGeoMap(\n        {\n            width,\n            height,\n            projectionType,\n            projectionScale,\n            projectionTranslation,\n            projectionRotation,\n            fillColor,\n            borderWidth,\n            borderColor,\n        }\n    )\n\n    useEffect(() => {\n        if (!canvasEl) return\n\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        const ctx = canvasEl.current.getContext('2d')\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n        ctx.translate(margin.left, margin.top)\n\n        path.context(ctx)\n\n        layers.forEach(layer => {\n            if (layer === 'graticule') {\n                if (enableGraticule === true) {\n                    ctx.lineWidth = graticuleLineWidth\n                    ctx.strokeStyle = graticuleLineColor\n                    ctx.beginPath()\n                    path(graticule())\n                    ctx.stroke()\n                }\n            } else if (layer === 'features') {\n                features.forEach(feature => {\n                    ctx.beginPath()\n                    path(feature)\n                    ctx.fillStyle = getFillColor(feature)\n                    ctx.fill()\n\n                    const borderWidth = getBorderWidth(feature)\n                    if (borderWidth > 0) {\n                        ctx.strokeStyle = getBorderColor(feature)\n                        ctx.lineWidth = borderWidth\n                        ctx.stroke()\n                    }\n                })\n            } else {\n                layer(ctx, props)\n            }\n        })\n    }, [\n        canvasEl,\n        outerWidth,\n        outerHeight,\n        margin,\n        pixelRatio,\n        theme,\n        path,\n        graticule,\n        getFillColor,\n        getBorderWidth,\n        getBorderColor,\n        features,\n        layers,\n    ])\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n    const handleMouseMove = useCallback(\n        event => {\n            if (!isInteractive || !Tooltip) return\n\n            const feature = getFeatureFromMouseEvent(event, canvasEl.current, features, projection)\n            if (feature) {\n                showTooltipFromEvent(<Tooltip feature={feature} />, event)\n            } else {\n                hideTooltip()\n            }\n            onMouseMove && onMouseMove(feature || null, event)\n        },\n        [showTooltipFromEvent, hideTooltip, isInteractive, Tooltip, canvasEl, features, projection]\n    )\n    const handleMouseLeave = useCallback(\n        () => isInteractive && hideTooltip(),\n        [isInteractive, hideTooltip]\n    )\n    const handleClick = useCallback(\n        event => {\n            if (!isInteractive || !onClick) return\n\n            const feature = getFeatureFromMouseEvent(event, canvasEl.current, features, projection)\n            if (feature) {\n                onClick(feature, event)\n            }\n        },\n        [isInteractive, canvasEl, features, projection, onClick]\n    )\n\n    return (\n        <canvas\n            ref={canvasEl}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n                cursor: isInteractive ? 'auto' : 'normal',\n            }}\n            onMouseMove={handleMouseMove}\n            onMouseLeave={handleMouseLeave}\n            onClick={handleClick}\n        />\n    )\n})\n\nGeoMapCanvas.displatName = 'GeoMapCanvas'\nGeoMapCanvas.propTypes = GeoMapCanvasPropTypes\n\nexport default withContainer(GeoMapCanvas)\n", "/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { ResponsiveWrapper } from '@nivo/core'\nimport GeoMapCanvas from './GeoMapCanvas'\n\nconst ResponsiveGeoMapCanvas = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <GeoMapCanvas width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveGeoMapCanvas\n", "/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo, Fragment, useCallback } from 'react'\nimport { SvgWrapper, withContainer, useDimensions, useTheme, bindDefs } from '@nivo/core'\nimport { BoxLegendSvg } from '@nivo/legends'\nimport { useTooltip } from '@nivo/tooltip'\nimport { ChoroplethPropTypes } from './props'\nimport GeoGraticule from './GeoGraticule'\nimport GeoMapFeature from './GeoMapFeature'\nimport { useGeoMap, useChoropleth } from './hooks'\nimport ChoroplethTooltip from './ChoroplethTooltip'\n\nconst Choropleth = memo(props => {\n    const {\n        width,\n        height,\n        margin: partialMargin,\n        features,\n        data,\n        match = 'id',\n        label = 'id',\n        value = 'value',\n        valueFormat,\n        projectionType = 'mercator',\n        projectionScale = 100,\n        projectionTranslation = [0.5, 0.5],\n        projectionRotation = [0, 0, 0],\n        colors = 'PuBuGn',\n        domain,\n        unknownColor = '#999',\n        borderWidth = 0,\n        borderColor = '#000000',\n        enableGraticule = false,\n        graticuleLineWidth = 0.5,\n        graticuleLineColor = '#999999',\n        layers = ['graticule', 'features', 'legends'],\n        legends = [],\n        isInteractive = true,\n        onClick = () => {},\n        tooltip: Tooltip = ChoroplethTooltip,\n        role = 'img',\n        defs = [],\n        fill = [],\n    } = props\n\n    const { margin, outerWidth, outerHeight } = useDimensions(width, height, partialMargin)\n    const { graticule, path, getBorderWidth, getBorderColor } = useGeoMap({\n        width,\n        height,\n        projectionType,\n        projectionScale,\n        projectionTranslation,\n        projectionRotation,\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        fillColor: () => {},\n        borderWidth,\n        borderColor,\n    })\n    const { getFillColor, boundFeatures, legendData } = useChoropleth({\n        features,\n        data,\n        match,\n        label,\n        value,\n        valueFormat,\n        colors,\n        unknownColor,\n        domain,\n    })\n\n    const theme = useTheme()\n\n    const boundDefs = bindDefs(defs, boundFeatures, fill, {\n        dataKey: 'data',\n        targetKey: 'fill',\n    })\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n    const handleClick = useCallback(\n        (feature, event) => isInteractive && onClick && onClick(feature, event),\n        [isInteractive, onClick]\n    )\n    const handleMouseEnter = useCallback(\n        (feature, event) =>\n            isInteractive && Tooltip && showTooltipFromEvent(<Tooltip feature={feature} />, event),\n        [isInteractive, showTooltipFromEvent, Tooltip]\n    )\n    const handleMouseMove = useCallback(\n        (feature, event) =>\n            isInteractive && Tooltip && showTooltipFromEvent(<Tooltip feature={feature} />, event),\n        [isInteractive, showTooltipFromEvent, Tooltip]\n    )\n    const handleMouseLeave = useCallback(\n        () => isInteractive && hideTooltip(),\n        [isInteractive, hideTooltip]\n    )\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            theme={theme}\n            defs={boundDefs}\n            role={role}\n        >\n            {layers.map((layer, i) => {\n                if (layer === 'graticule') {\n                    if (enableGraticule !== true) return null\n\n                    return (\n                        <GeoGraticule\n                            key=\"graticule\"\n                            path={path}\n                            graticule={graticule}\n                            lineWidth={graticuleLineWidth}\n                            lineColor={graticuleLineColor}\n                        />\n                    )\n                }\n                if (layer === 'features') {\n                    return (\n                        <Fragment key=\"features\">\n                            {boundFeatures.map(feature => (\n                                <GeoMapFeature\n                                    key={feature.id}\n                                    feature={feature}\n                                    path={path}\n                                    fillColor={getFillColor(feature)}\n                                    borderWidth={getBorderWidth(feature)}\n                                    borderColor={getBorderColor(feature)}\n                                    onMouseEnter={handleMouseEnter}\n                                    onMouseMove={handleMouseMove}\n                                    onMouseLeave={handleMouseLeave}\n                                    onClick={handleClick}\n                                />\n                            ))}\n                        </Fragment>\n                    )\n                }\n                if (layer === 'legends') {\n                    return legends.map((legend, i) => {\n                        return (\n                            <BoxLegendSvg\n                                key={i}\n                                containerWidth={width}\n                                containerHeight={height}\n                                data={legendData}\n                                {...legend}\n                            />\n                        )\n                    })\n                }\n\n                return <Fragment key={i}>{layer({})}</Fragment>\n            })}\n        </SvgWrapper>\n    )\n})\n\nChoropleth.displayName = 'Choropleth'\nChoropleth.propTypes = ChoroplethPropTypes\n\nexport default withContainer(Choropleth)\n", "/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { ResponsiveWrapper } from '@nivo/core'\nimport Choropleth from './Choropleth'\n\nconst ResponsiveChoropleth = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Choropleth width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveChoropleth\n", "/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo, useRef, useEffect, useCallback } from 'react'\nimport { geoContains } from 'd3-geo'\nimport { getRelativeCursor, withContainer, useDimensions, useTheme } from '@nivo/core'\nimport { renderLegendToCanvas } from '@nivo/legends'\nimport { useTooltip } from '@nivo/tooltip'\nimport { ChoroplethCanvasPropTypes } from './props'\nimport { useGeoMap, useChoropleth } from './hooks'\nimport ChoroplethTooltip from './ChoroplethTooltip'\n\nconst getFeatureFromMouseEvent = (event, el, features, projection) => {\n    const [x, y] = getRelativeCursor(el, event)\n\n    return features.find(f => geoContains(f, projection.invert([x, y])))\n}\n\nconst ChoroplethCanvas = memo(props => {\n    const {\n        width,\n        height,\n        margin: partialMargin,\n        pixelRatio = typeof window !== 'undefined' ? window.devicePixelRatio || 1 : 1,\n        features,\n        data,\n        match = 'id',\n        label = 'id',\n        value = 'value',\n        valueFormat,\n        projectionType = 'mercator',\n        projectionScale = 100,\n        projectionTranslation = [0.5, 0.5],\n        projectionRotation = [0, 0, 0],\n        colors = 'PuBuGn',\n        domain,\n        unknownColor = '#999',\n        borderWidth = 0,\n        borderColor = '#000000',\n        enableGraticule = false,\n        graticuleLineWidth = 0.5,\n        graticuleLineColor = '#999999',\n        layers = ['graticule', 'features', 'legends'],\n        legends = [],\n        isInteractive = true,\n        onClick = () => {},\n        onMouseMove = () => {},\n        tooltip: Tooltip = ChoroplethTooltip,\n    } = props\n    const canvasEl = useRef(null)\n    const theme = useTheme()\n    const { margin, outerWidth, outerHeight } = useDimensions(width, height, partialMargin)\n    const { projection, graticule, path, getBorderWidth, getBorderColor } = useGeoMap({\n        width,\n        height,\n        projectionType,\n        projectionScale,\n        projectionTranslation,\n        projectionRotation,\n        fillColor: () => {},\n        borderWidth,\n        borderColor,\n    })\n    const { getFillColor, boundFeatures, legendData } = useChoropleth({\n        features,\n        data,\n        match,\n        label,\n        value,\n        valueFormat,\n        colors,\n        unknownColor,\n        domain,\n    })\n\n    useEffect(() => {\n        if (!canvasEl) return\n\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        const ctx = canvasEl.current.getContext('2d')\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n        ctx.translate(margin.left, margin.top)\n\n        path.context(ctx)\n\n        layers.forEach(layer => {\n            if (layer === 'graticule') {\n                if (enableGraticule === true) {\n                    ctx.lineWidth = graticuleLineWidth\n                    ctx.strokeStyle = graticuleLineColor\n                    ctx.beginPath()\n                    path(graticule())\n                    ctx.stroke()\n                }\n            } else if (layer === 'features') {\n                boundFeatures.forEach(feature => {\n                    ctx.beginPath()\n                    path(feature)\n                    ctx.fillStyle = getFillColor(feature)\n                    ctx.fill()\n\n                    const borderWidth = getBorderWidth(feature)\n                    if (borderWidth > 0) {\n                        ctx.strokeStyle = getBorderColor(feature)\n                        ctx.lineWidth = borderWidth\n                        ctx.stroke()\n                    }\n                })\n            } else if (layer === 'legends') {\n                legends.forEach(legend => {\n                    renderLegendToCanvas(ctx, {\n                        ...legend,\n                        data: legendData,\n                        containerWidth: width,\n                        containerHeight: height,\n                        theme,\n                    })\n                })\n            } else {\n                // layer(ctx, {})\n            }\n        })\n    }, [\n        canvasEl,\n        outerWidth,\n        outerHeight,\n        margin,\n        pixelRatio,\n        theme,\n        path,\n        graticule,\n        getFillColor,\n        getBorderWidth,\n        getBorderColor,\n        boundFeatures,\n        legends,\n        layers,\n    ])\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n    const handleMouseMove = useCallback(\n        event => {\n            if (!isInteractive || !Tooltip) return\n\n            const feature = getFeatureFromMouseEvent(\n                event,\n                canvasEl.current,\n                boundFeatures,\n                projection\n            )\n            if (feature) {\n                showTooltipFromEvent(<Tooltip feature={feature} />, event)\n            } else {\n                hideTooltip()\n            }\n            onMouseMove && onMouseMove(feature || null, event)\n        },\n        [\n            showTooltipFromEvent,\n            hideTooltip,\n            isInteractive,\n            Tooltip,\n            canvasEl,\n            boundFeatures,\n            projection,\n        ]\n    )\n    const handleMouseLeave = useCallback(\n        () => isInteractive && hideTooltip(),\n        [isInteractive, hideTooltip]\n    )\n    const handleClick = useCallback(\n        event => {\n            if (!isInteractive || !onClick) return\n\n            const feature = getFeatureFromMouseEvent(\n                event,\n                canvasEl.current,\n                boundFeatures,\n                projection\n            )\n            if (feature) {\n                onClick(feature, event)\n            }\n        },\n        [isInteractive, canvasEl, boundFeatures, projection, onClick]\n    )\n\n    return (\n        <canvas\n            ref={canvasEl}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n                cursor: isInteractive ? 'auto' : 'normal',\n            }}\n            onMouseMove={handleMouseMove}\n            onMouseLeave={handleMouseLeave}\n            onClick={handleClick}\n        />\n    )\n})\n\nChoroplethCanvas.displayName = 'ChoroplethCanvas'\nChoroplethCanvas.propTypes = ChoroplethCanvasPropTypes\n\nexport default withContainer(ChoroplethCanvas)\n", "/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { ResponsiveWrapper } from '@nivo/core'\nimport ChoroplethCanvas from './ChoroplethCanvas'\n\nconst ResponsiveChoroplethCanvas = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <ChoroplethCanvas width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveChoroplethCanvas\n"],
  "mappings": "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",
  "names": ["y", "object", "i", "n", "coordinates", "cartesian", "spherical", "k", "y", "y", "z", "k", "coordinates", "t", "y", "m", "compareIntersection", "i", "n", "array", "i", "n", "m", "lambda0", "sinPhi0", "cosPhi0", "j", "sign", "k", "n", "i", "n", "m", "i", "j", "array", "i", "n", "m", "point", "lambda0", "cosPhi0", "t", "A", "w", "lambda0", "z", "delta", "r", "code", "x0", "y0", "x1", "y1", "r", "x0", "y0", "x1", "y1", "y", "compareIntersection", "i", "n", "ring", "j", "m", "point", "visible", "y", "z", "object", "object", "i", "n", "coordinates", "y0", "y1", "y", "x0", "x1", "x", "X1", "X0", "Y1", "Y0", "X", "Y", "graticule", "coordinates", "_", "identity_default", "areaSum", "areaRingSum", "areaStream", "y", "x0", "y0", "y", "x00", "y00", "x0", "y0", "y", "z", "_", "y", "lengthSum", "x00", "y00", "x0", "y0", "lengthStream", "lengthPointFirst", "lengthPoint", "y", "_", "y", "projection", "object", "_", "identity_default", "y", "projection", "object", "w", "k", "y", "y", "x0", "y0", "lambda0", "x1", "y1", "m", "x00", "y00", "y", "r", "k", "x0", "y0", "x1", "y1", "identity_default", "projection", "_", "object", "y", "k", "z", "z", "z", "y", "m", "x0", "y0", "x1", "y1", "_", "k", "t", "y", "i", "y", "k", "y", "i", "y", "y", "k", "z", "y", "m", "_", "projectionById", "azimuthalEqualArea", "geoAzimuthalEqualArea", "azimuthalEquidistant", "geoAzimuthalEquidistant", "gnomonic", "geoGnomonic", "orthographic", "geoOrthographic", "stereographic", "geoStereographic", "equalEarth", "geoEqualEarth", "equirectangular", "geoEquirectangular", "mercator", "geoMercator", "transverseMercator", "geoTransverseMercator", "naturalEarth1", "geoNaturalEarth1", "useGeoMap", "_ref", "width", "height", "projectionType", "projectionScale", "projectionTranslation", "projectionRotation", "fillColor", "borderWidth", "borderColor", "projection", "useMemo", "scale", "translate", "rotate", "path", "geoPath", "graticule", "geoGraticule", "theme", "useTheme", "getBorderWidth", "getBorderColor", "useInheritedColor", "getFillColor", "useChoropleth", "_ref2", "features", "data", "match", "label", "value", "valueFormat", "colors", "unknownColor", "domain", "findMatchingDatum", "isFunction", "feature", "datum", "featureKey", "get", "datumKey", "getLabel", "getValue", "valueFormatter", "d", "format", "colorScale", "guessQuantizeColorScale", "boundFeatures", "map", "find", "datumValue", "featureWithData", "_extends", "formattedValue", "color", "legendData", "useQuantizeColorScaleLegendData", "ChoroplethTooltip", "memo", "_jsx", "BasicTooltip", "id", "enableChip", "propTypes", "PropTypes", "object", "isRequired", "displayName", "commonPropTypes", "arrayOf", "shape", "string", "type", "oneOf", "properties", "geometry", "Object", "keys", "number", "oneOfType", "func", "inheritedColorPropType", "enableGraticule", "bool", "graticuleLineWidth", "graticuleLineColor", "isInteractive", "onMouseEnter", "onMouseMove", "onMouseLeave", "onClick", "tooltip", "any", "layers", "GeoMapPropTypes", "role", "GeoMapCanvasPropTypes", "pixelRatio", "commonChoroplethPropTypes", "quantizeColorScalePropType", "ChoroplethPropTypes", "ChoroplethCanvasPropTypes", "commonDefaultProps", "legends", "fill", "defs", "GeoMapDefaultProps", "GeoMapCanvasDefaultProps", "window", "devicePixelRatio", "commonChoroplethDefaultProps", "ChoroplethDefaultProps", "ChoroplethCanvasDefaultProps", "GeoGraticule", "lineWidth", "lineColor", "strokeWidth", "stroke", "GeoMapFeature", "_feature$fill", "strokeLinejoin", "event", "GeoMap", "props", "partialMargin", "margin", "_props$layers", "_props$projectionType", "_props$projectionScal", "_props$projectionTran", "_props$projectionRota", "_props$fillColor", "_props$borderWidth", "_props$borderColor", "_props$enableGraticul", "_props$graticuleLineW", "_props$graticuleLineC", "_props$isInteractive", "_props$onClick", "Tooltip", "_props$role", "_useDimensions", "useDimensions", "outerWidth", "outerHeight", "_useGeoMap", "_useTooltip", "useTooltip", "showTooltipFromEvent", "hideTooltip", "handleClick", "useCallback", "handleMouseEnter", "handleMouseMove", "handleMouseLeave", "SvgWrapper", "children", "layer", "i", "Fragment", "withContainer", "ResponsiveGeoMap", "ResponsiveWrapper", "getFeatureFromMouseEvent", "el", "_getRelativeCursor", "getRelativeCursor", "x", "y", "f", "geoContains", "invert", "GeoMapCanvas", "_props$pixelRatio", "_props$onMouseMove", "canvasEl", "useRef", "useEffect", "current", "ctx", "getContext", "fillStyle", "background", "fillRect", "left", "top", "context", "forEach", "strokeStyle", "beginPath", "ref", "style", "cursor", "displatName", "ResponsiveGeoMapCanvas", "Choropleth", "_props$match", "_props$label", "_props$value", "_props$colors", "_props$unknownColor", "_props$legends", "_props$tooltip", "_props$defs", "_props$fill", "_useChoropleth", "boundDefs", "bindDefs", "dataKey", "targetKey", "legend", "BoxLegendSvg", "containerWidth", "containerHeight", "ResponsiveChoropleth", "ChoroplethCanvas", "renderLegendToCanvas", "ResponsiveChoroplethCanvas"]
}
